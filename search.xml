<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/blog/2020/09/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Async programming in JavaScript</title>
    <url>/blog/2020/06/08/js-async/</url>
    <content><![CDATA[<p><strong>async</strong> actions: actions init now but finish later (code below it won’t wait) <a href="https://javascript.info/callbacks">..</a></p>
<h1 id="Callback"><a href="#Callback" class="headerlink" title="Callback"></a>Callback</h1><p><code>loadScript(src, callback)</code> example <a href="https://javascript.info/callbacks">..</a>: “error-first callback” style — callback hell / pyramid of doom (code grows to the right)</p>
<p><strong>Fn Call Scheduling</strong>: <code>setTimeout/setInterval(..)</code> <a href="https://javascript.info/settimeout-setinterval">..</a> (enqueue in macrotask <a href="https://javascript.info/event-loop#event-loop">..</a>)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> timerId = <span class="built_in">setTimeout</span>/<span class="built_in">setInterval</span>(fn, delay=<span class="number">0</span>, ...args); <span class="comment">// keep fn-ref in scheduler (not GC) </span></span><br><span class="line"><span class="built_in">clearTimeout</span>/<span class="built_in">clearInterval</span>(timerId); <span class="comment">// &quot;timerId keep same&quot; af clear (not null)</span></span><br></pre></td></tr></table></figure>
<ul>
<li><strong>setTimeout()</strong>: set <code>this=window</code> <a href="https://javascript.info/call-apply-decorators#delaying-decorator">..</a></li>
<li><strong>setInterval()</strong>: fn-exe-time &gt; delay? <a href="https://javascript.info/settimeout-setinterval#nested-settimeout">..</a></li>
<li><strong>nested setTimeout</strong> vs setInterval ..</li>
<li>tasks: <a href="https://javascript.info/settimeout-setinterval#output-every-second">Output every second</a></li>
</ul>
<a id="more"></a>

<h1 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> .. ) <span class="comment">// Executor(res, rej), auto-run when &quot;new Promise&quot;</span></span><br><span class="line">  <span class="comment">// Consumers: pass prev settled result &amp; return a promise (can be chainned)</span></span><br><span class="line">  .then(<span class="function"><span class="params">value</span> =&gt;</span> .. ) <span class="comment">// onresolve</span></span><br><span class="line">  .catch(<span class="function"><span class="params">err</span> =&gt;</span> .. )  <span class="comment">// onreject / err occur [https://javascript.info/promise-error-handling#implicit-try-catch]</span></span><br><span class="line">  .finally &#123; .. &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>resolve</code> &amp; <code>reject</code>: pre-defiend callbacks, called once (further calls ignored)</li>
<li>error occur in setTimeout (except <code>reject(err)</code>) not catched <a href="https://javascript.info/promise-error-handling#error-in-settimeout">..</a></li>
<li>unhandlerd rejection &amp; window ‘unhandledrejection’ event <a href="https://javascript.info/promise-error-handling#unhandled-rejections">..</a></li>
<li><code>.finally(fn)</code>: handler no params (just pass result to next handler)</li>
<li>callback vs promise: promise only single result (callback can be called mtp times) <a href="https://javascript.info/promisify">..</a></li>
</ul>
<h1 id="async-await"><a href="#async-await" class="headerlink" title="async/await"></a>async/await</h1><p><code>async</code> bf fn: return a promise &amp; enable <code>await</code></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// await &amp; try-catch for Promise.then() &amp; catch()</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> response = <span class="keyword">await</span> fetch(<span class="string">&#x27;..&#x27;</span>); </span><br><span class="line">    <span class="keyword">let</span> user = <span class="keyword">await</span> response.json();</span><br><span class="line">  &#125; <span class="keyword">catch</span>(err) &#123; </span><br><span class="line">  	<span class="comment">/* ... */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Promise-API"><a href="#Promise-API" class="headerlink" title="Promise API"></a>Promise API</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> promise = <span class="built_in">Promise</span>.all/allSettled/race(...promises);</span><br></pre></td></tr></table></figure>
<ul>
<li><code>Promise.all()</code>: <strong>Promise.resolve([…values])</strong> / <strong>Promise.reject(err)</strong> (all or nothing)</li>
<li><code>Promise.allSettled()</code>: <strong>Promise.resolve([…objs])</strong> (contain both ‘fulfilled’ &amp; ‘rejected’)</li>
<li><code>Promise.race()</code>: <strong>1st (fastest) settled</strong> promise.result</li>
</ul>
<p><strong>Promise.resolve(value) /.reject(err)</strong>: a resolved / rejected promise with value / err, same as</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> resolve(value) || reject(error));</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>IT</category>
        <category>Programming</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>IT</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript network requests</title>
    <url>/blog/2020/08/16/js-network/</url>
    <content><![CDATA[<h1 id="Mtp-win-comm"><a href="#Mtp-win-comm" class="headerlink" title="Mtp win comm"></a>Mtp win comm</h1><p><a href="https://javascript.info/popup-windows" title="a sep win with own JS env, safe to open un-trusted 3rd-party site">Popup win</a>: <code>window.open(URL, ..)</code> <a href="https://javascript.info/popup-windows#window-open">..</a> — open a new tab (by default) in browser (or win if sizes provided <a href="https://javascript.info/popup-windows#summary">..</a>)</p>
<ul>
<li>win &lt;-&gt; popup: <code>let popupWin = window.open(..);</code> <a href="https://javascript.info/popup-windows#accessing-popup-from-window">..</a>, <code>popupWin.opener</code> <a href="https://javascript.info/popup-windows#accessing-window-from-popup">..</a></li>
<li>close popup: <code>win.close()</code> &amp; <code>win.closed</code> (status check) <a href="https://javascript.info/popup-windows#closing-a-popup">..</a></li>
<li>win focus/blur: <code>win.focus/blur()</code> &amp; <code>win.onfocus/onblur</code> <a href="https://javascript.info/popup-windows#focus-blur-on-a-window">..</a></li>
<li>win scrolling &amp; resizing <a href="https://javascript.info/popup-windows#scrolling-and-resizing">…</a></li>
</ul>
<p><a href="ttps://javascript.info/cross-window-communication#in-action-iframe" title="a sep embeded win with own sep `document` and `window` obj">Embedded win</a>: <code>&lt;iframe ..&gt;</code> — <code>iframe.contentWindow/contentDocument</code> <a href="https://javascript.info/cross-window-communication#in-action-iframe">..</a></p>
<ul>
<li>wrong doc pitfall: <code>iframe.contentDocument</code> when <code>iframe.onload</code> (wrong for the one immediately af iframe created) <a href="https://javascript.info/cross-window-communication#iframe-wrong-document-pitfall">..</a></li>
<li><code>window.frames</code> (named coll) &amp; win hierarchy (iframe contains iframes) — check whether iframe by <code>win === top</code> <a href="https://javascript.info/cross-window-communication#collection-window-frames">..</a> </li>
<li>iframe <code>sandbox</code> attr (exclude certain actions inside iframe) <a href="https://javascript.info/cross-window-communication#the-sandbox-iframe-attribute">…</a></li>
<li>transparent iframe &amp; clickjacking attack (intercept a single click <a href="https://javascript.info/clickjacking#summary">..</a>) <a href="https://javascript.info/clickjacking">…</a>: </li>
</ul>
<p>Same origin policy &amp; Cross-win Comm <a href="https://javascript.info/cross-window-communication">..</a></p>
<ul>
<li>origin: “protocol://domain:port” <a href="https://javascript.info/popup-windows#accessing-popup-from-window">..</a> &amp; same origin policy (only allow to set <code>location</code> <a href="https://javascript.info/cross-window-communication#same-origin">..</a> &amp; get ref of <code>iframe.contentWindow</code> <a href="https://javascript.info/cross-window-communication#in-action-iframe">..</a>)<ul>
<li>make same 2nd-level domain wins <strong>same origin</strong>: <code>document.domain = &#39;site.com&#39;</code> <a href="https://javascript.info/cross-window-communication#windows-on-subdomains-document-domain">..</a></li>
</ul>
</li>
<li>cross-win msg (from any origin): sender-win call <code>receiverWin.postMessage(..)</code> &amp; in receiver-win, <code>receiverWin.message</code> event trigger when its <code>postMessage(..)</code> called <a href="https://javascript.info/cross-window-communication#cross-window-messaging">..</a><ul>
<li>add handler to <code>receiverWin.message</code> event by <code>addEventHandler()</code></li>
</ul>
</li>
</ul>
<a id="more"></a>

<hr>
<p>URL components &amp; char-encoding <a href="https://javascript.info/url">..</a></p>
<p>Binary data, files</p>
<ul>
<li>deal with files/img (create, upload, download)</li>
<li><code>ArrayBuffer(..)</code>: store raw binary data (seq of bytes)</li>
<li><strong>view</strong> obj (aka <strong>TypedArray</strong>): interpret data stored in ArrayBuffer (no data on it’s own)</li>
<li><code>buffer.byteLength</code>, <code>arr.buffer</code>, <code>arr.length</code> &amp; <code>arr.byteLength</code></li>
<li><code>DataView</code>: untyped view over ArrayBuffer (choose data format at method)</li>
<li><code>ArrayBufferView</code> &amp; <code>BufferSource</code> ..</li>
<li>Task: <a href="https://javascript.info/arraybuffer-binary-arrays#concatenate-typed-arrays">Concatenate typed arrays</a></li>
</ul>
<p>Blob: binary data with type in File API, immutable</p>
<ul>
<li>in file upload/download op &amp; web network request <a href="https://javascript.info/blob#summary">..</a></li>
<li>Blob to URL (for <code>&lt;a&gt;/&lt;img&gt;</code> tags): <ul>
<li><code>&lt;a download=&quot;hello.txt&quot;&gt;</code></li>
<li><code>Blob type: &#39;text/html&#39;</code> (or <code>&#39;text/plain&#39;</code>, becomes Content-Type in network requests, see fetch()) </li>
<li><code>link.href = URL.createObjectURL(blob)</code> &amp; <code>URL.revokeObjectURL(link.href)</code></li>
<li><code>link.click()</code>: simulate click on <code>&lt;a&gt;</code></li>
</ul>
</li>
<li>Blob to base64 Data URL / ArrayBuffer: <code>fileReader.readAsDataURL / .readAsArrayBuffer(blob)</code> &amp; <code>link.href / arrBuffer = fileReader.result</code></li>
<li>img to Blob (blob type: <code>&#39;image/png&#39;</code>): <code>context.drawImage(img)</code> &amp; <code>canvas.toBlob(blob =&gt; ..)</code> ..</li>
</ul>
<p>File and FileReader</p>
<ul>
<li><code>File</code> inherit from <code>Blob</code>, <code>input.files[0]</code> &amp; Drag’n’Drop events</li>
<li><code>FileReader</code>: <code>fr.readAs*(blob)</code> (as ArrayBuffer, Text, base64 DataURL ..) <code>fr.result / err</code> &amp; other events</li>
</ul>
<p>String &lt;=&gt; bytes by utf-8: <code>TextEncoder.encode(str)</code> (to bytes) &amp; <code>TextDecoder.decode()</code> (get str)</p>
<p>Network requests &amp; fetch()<br><code>fetch(url, [options])</code> &amp; AJAX ..</p>
<ul>
<li><code>fetch(url)</code>: GET request (downloading content of the url) ==&gt; fetch API <a href="https://javascript.info/fetch-api">..</a></li>
<li><strong>options</strong>: <code>&#123; method, headers, body &#125;</code><ul>
<li>header option <code>&quot;Content-Type</code>: application/json, text/plain;charset=UTF-8, multipart/form-data <a href="https://javascript.info/formdata">..</a></li>
<li>body type: <a href="https://javascript.info/fetch#post-requests">JSON</a>, <a href="https://javascript.info/formdata">FormData</a> (with file / Blob ..), <a href="https://javascript.info/fetch#sending-an-image">Blob</a> ..</li>
</ul>
</li>
</ul>
<p><code>fetch(url, [options]).then(response =&gt; response.json()).then(result =&gt; /* process result */)</code></p>
<ul>
<li>fetch() return a Promise resolved with <code>Response</code> obj when server response with headers (no body yet)<ul>
<li><code>response.status/ok</code>, <code>response.headers</code> &amp; <code>Content-Length</code><a href="https://javascript.info/fetch-progress">..</a> ..</li>
<li>promise rejects &amp; Abnormal HTTP-statuses (such as 404 or 500 do not cause an error) ..</li>
</ul>
</li>
<li>get response body: <code>response.json()</code> (async)</li>
<li>Task: Fetch users from GitHub ..</li>
<li>Read response body chunk-by-chunk (binary data) as it comes: <code>response.body: ReadableStream</code> <a href="https://javascript.info/fetch-progress">..</a></li>
</ul>
<p>Fetch &amp; CORS</p>
<ul>
<li>Cross-origin requests need special headers from the remote</li>
<li>simple requests &amp; <code>&lt;form&gt;</code> &amp; <code>&lt;script&gt;</code><ul>
<li><code>&lt;form target=&quot;iframe&quot; ..&gt;</code></li>
<li>script &amp; JSONP protocol: <code>&lt;script src=&quot;another-site.com?callback=xxx&quot;&gt;</code><ul>
<li><code>another-site.com</code>: the remote website intended to expose data for this kind of access</li>
<li>fn <code>xxx(data)</code>: remote dynamically generates a script, loads and executes &amp; call local fn <code>xxx(data)</code> with the data it wants us to receive as arg</li>
</ul>
</li>
<li><a href="https://javascript.info/fetch-crossorigin#cors-for-simple-requests">CORS process for simple requests</a> ..</li>
</ul>
</li>
<li><a href="https://javascript.info/fetch-crossorigin#non-simple-requests">preflight request &amp; non-simple request</a> ..</li>
<li>server response header <code>Access-Control-Expose-Headers</code>: allow js to access non-simple response headers</li>
<li>fetch option <code>credentials: &quot;include&quot;</code> &amp; server response header <code>Access-Control-Allow-Credentials: true</code> ..</li>
<li>Tasks: request HTTP-header: <code>Origin</code> &amp; <code>Referer</code> <a href="https://javascript.info/fetch-crossorigin#why-do-we-need-origin">..</a></li>
</ul>
<p>Abort async task: <code>AbortController</code></p>
<ul>
<li>listen to singnal’s abort event: <code>fetch(url, &#123;signal: abortController.signal&#125;)</code>, or<br><code>Promise((res, rej) =&gt; &#123; ... ctrller.signal.addEventListener(&#39;abort&#39;, rej) ... &#125;)</code> </li>
<li>trigger singnal’s abort event to abort request: <code>ctrler.abort()</code> </li>
<li>=&gt; <code>fetch.Promide.reject(AbortError)</code></li>
</ul>
<p>XMLHTTPRequest (<code>fetch</code> cannot track upload progress)</p>
<ul>
<li>default <code>async</code></li>
<li>events: <code>load/error/progress</code> (the old <code>readystate</code> &amp; <code>onreadystatechange</code>)<ul>
<li><code>GET</code> &amp; <code>progress</code> (triggers when the data is sent <a href="https://javascript.info/resume-upload#not-so-useful-progress-event">..</a>)</li>
<li><code>POST</code>: xhr first uploads data (the request body), then downloads the response</li>
</ul>
</li>
<li><code>xhr.responseType = &#39;json&#39;</code> &amp; <code>xhr.response</code>, <code>xhr.abort()</code></li>
<li>HTTP-headers ..</li>
<li>track upload progress: <code>xhr.upload.onprocess</code>, <code>e.lengthComputable</code> (true if server sent Content-Length header) &amp; <code>e.loaded / e.total</code></li>
<li>resume file uploading &amp; <code>fetch(&#39;status&#39;, &#123; headers: &#123; &#39;X-File-Id&#39;: fileId &#125; &#125; )</code> <a href="https://javascript.info/resume-upload#algorithm">..</a></li>
</ul>
<h1 id="B-S-communication"><a href="#B-S-communication" class="headerlink" title="B/S communication"></a>B/S communication</h1><h2 id="Receive-msg-from-server"><a href="#Receive-msg-from-server" class="headerlink" title="Receive msg from server"></a>Receive msg from server</h2><p><strong>Regular polling</strong>: msg pass delay, server bombed with requests<br><strong>Long polling pattern</strong>: b.request =&gt; s.hang conn until msg passed =&gt; conn close/lost &amp; b.re-request ..</p>
<ul>
<li>sent msg to server by <code>fetch(..)</code> &amp; receive msg by re <code>fetch(url)</code> af prev response body got</li>
<li>good when msgs rare</li>
</ul>
<p><strong>EventSource</strong>: persistent conn, msg: str text, auto-reconn</p>
<ul>
<li><code>new EventSource(url, [&#123; withCredentials: true &#125;])</code>: conn to url &amp; waiting for server.msg<ul>
<li>server response with HTTP-status 200 &amp; header <code>Content-Type: text/event-stream</code> (write text msg) </li>
<li>auto-reconn if conn lost (with few seconds delay)</li>
<li>no reconn if server response with HTTP-status 204 || some <code>&quot;error&quot;</code> cases || <code>es.close()</code> ..</li>
</ul>
</li>
<li>server msg fields<ul>
<li><code>retry: &lt;delay&gt;</code> for reconn timeout</li>
<li><code>event: &lt;customEvent&gt;</code> (precede <code>data</code>) =&gt; <code>es.addEventListener(..)</code></li>
<li><code>data: &lt;msg&gt;</code> =&gt; <code>es.onmessage(e.data)</code></li>
<li><code>id</code> for conn resume (last field) =&gt; <code>es.lastEventId</code> &amp; browser sent <code>Last-Event-ID</code> header when reconn </li>
</ul>
</li>
<li>events: <code>open</code>, <code>message</code>(<code>e.data</code>), <code>error</code> &amp; custom event ..</li>
</ul>
<h2 id="Bi-directional-data-exchange"><a href="#Bi-directional-data-exchange" class="headerlink" title="Bi-directional data exchange"></a>Bi-directional data exchange</h2><p><strong>WebSocket</strong>: persistent conn, msg: text/binary data (cross-origin by nature)</p>
<ul>
<li>events: <code>open/message(e.data)/error(e.message)/close</code></li>
<li><code>new WebSocket(&quot;wss://ws.site.com&quot;, [...subprotocols]);</code>: start connecting<ul>
<li>Extensions (by browser) and subprotocols in both headers ..</li>
</ul>
</li>
<li><code>ws.send(data: str/binary)</code></li>
<li><code>ws.close(code=1000, reason);</code> =&gt; <code>onclose.e.code/reason</code> (<code>e.wasClean=false</code> when no close frame)</li>
<li>set received binary data format: <code>socket.binaryType = &quot;arraybuffer&quot;;</code></li>
<li>check how many bytes waiting to be sent currently: <code>socket.bufferedAmount</code></li>
</ul>
<h2 id="General"><a href="#General" class="headerlink" title="General"></a>General</h2><ul>
<li>conn state check: <code>es/ws.readyState</code> ..</li>
</ul>
<p>Storing data in the browser<br>Cookie: <code>name=value;</code> pairs stored in browser, part of HTTP protocol</p>
<ul>
<li>server set it in response <code>Set-Cookie</code> HTTP-header &amp; browser sent it in request <code>Cookie</code> HTTP-header when request to same domain, e.g. in auth</li>
<li>read/write by <code>document.cookie</code> <ul>
<li>unaccessible if <code>httpOnly</code> option set; </li>
<li>special char encoded by <code>encodeURIComponent(..)</code></li>
</ul>
</li>
<li>options: <ul>
<li><code>path=/</code> (accessible for pages under that path), <code>domain=site.com</code> (accessible at its sub-domain)</li>
<li><code>expires=GMT-timezone</code> / <code>max-age=seconds</code>: cookie rmed af browser close by default: session cookie</li>
<li><code>secure</code>: only accessible over HTTPS (if set in https://)</li>
<li><code>samesite</code>: prevent XSRF attack (only work for browser af 2017)<ul>
<li>prev solution: server check XSRF protection token in every form it receives</li>
<li><code>samesite[=strict]</code>: forbids browser to sent cookie if request from outside (so user not recgnized &amp; op not proceed)</li>
<li><code>samesite=lax</code>: sent cookie when “go to URL” op</li>
</ul>
</li>
</ul>
</li>
<li>3rd-party cookies: placed by domain other than the page visiting, to recognize &amp; track user when moves btn sites (GDPR enforce explicit user permission) .. </li>
</ul>
<p>Browser storage obj: save key/value pairs in browser</p>
<ul>
<li><code>sessionStorage</code>: only exists in current browser tab (even page refresh, but not re-open)</li>
<li><code>localStorage</code>: data shared btn all wins with the same origin &amp; not expire</li>
<li>comm methods and properties, key loops ..</li>
<li><code>window.onstorage</code> event: triggers on all wins where the storage accessible, except the causing one, allow same origin windows to exchange msgs</li>
<li><code>sessionStorage/localStorage</code> key/value type: both strs (auto-toString)</li>
<li>task: Autosave a form field</li>
</ul>
<p>indexedDB: mtp types of key/value, bigger storage (intended for offline apps), support transaction</p>
<ul>
<li><code>let openRequest = indexedDB.open(DBNname: str, schemaVersionNo: int);</code>: conn to a DB, bound to current origin</li>
<li>openRequest obj events:<ul>
<li><code>error</code> &amp; <code>console.error(&quot;Error&quot;, openRequest.error)</code></li>
<li><code>success</code> &amp; <code>let db = openRequest.result</code></li>
<li><code>upgradeneeded</code>: when client local db version <code>e.oldVersion</code> &lt; arg <code>schemaVersionNo</code> <code>e.newVersion</code><ul>
<li>e.g. user come 1st time (db not exist yet, version = 0), </li>
<li>or client load old code (prevent by HTTP caching headers, or prompt reload page)</li>
<li>handler finishes without errs =&gt; trigger <code>openRequest.onsuccess</code></li>
</ul>
</li>
</ul>
</li>
<li>Parallel update problem: both old/new db conn exists (in diff tabs)<ul>
<li><code>versionchange</code> event trigger in tab1 (old version db conn): close old db conn &amp; reload page (see <code>db.onversionchange</code>)</li>
<li>if old db conn not close,  <code>open()</code> in tab2 trigger <code>block</code> event (ask tab2 user to close other tabs for update)</li>
<li>variants ..</li>
</ul>
</li>
<li>delete db by <code>let deleteRequest = indexedDB.deleteDatabase(name)</code><ul>
<li>check <code>deleteRequest.onsuccess/onerror</code> for deletion result</li>
</ul>
</li>
<li>object store (i.e. table in RDB)<ul>
<li><code>db.create/deleteObjectStore(..), objectStoreNames.contains(..)</code> ..</li>
<li>created/removed/altered obj-store only in <code>upgradeneeded</code> handler (auto-generate a <code>versionchange</code> transaction)</li>
<li>can make data-ops outside <code>upgradeneeded</code> handler </li>
<li>obj-store CRUD requests<ul>
<li>search by key: <code>IDBKeyRange</code> obj &amp; <code>store.get*([query])</code> (values sorted by key order) ..<br>  by other fields by <code>index</code> (return a obj-store-liked obj keyed by that field, could mtp-value) ..</li>
<li>add/update &amp; delete data request: <code>store.add/put(obj)</code>, <code>store.delete(..)/clear()</code></li>
</ul>
</li>
<li>iter obj-store by <code>cursor</code> ..</li>
</ul>
</li>
<li>transaction<ul>
<li>starts t &amp; get it obj-store: <code>let t = db.transaction(..)</code> <code>let books = t.objectStore(&quot;books&quot;)</code><br>&amp; other request cmds</li>
<li><code>request.onsuccess/error</code> &amp; <code>request.result/error</code></li>
<li>all t.requests finish =&gt; microtasks queue empty =&gt; auto-commit =&gt; <code>t.oncomplete</code> event<ul>
<li>async ops/macrotask not allowed btn t.requests: t closed bf macrotasks starts =&gt; <code>TransactionInactiveError</code></li>
<li>solution: split t ops &amp; macrotasks/async ops apart ..</li>
</ul>
</li>
<li><code>t.abort()</code> &amp; <code>t.onabort</code> event, <code>t.error</code><ul>
<li>failed request auto abort t, can be prevent in <code>request.onerror</code> handler by <code>e.preventDefault()</code></li>
</ul>
</li>
</ul>
</li>
<li>IndexedDB events bubble: <code>request</code> → <code>transaction</code> → <code>database</code><ul>
<li><code>db.onerror = function(event) &#123; let request = event.target.. &#125;</code></li>
</ul>
</li>
<li>Promise wrapper &amp; <code>try..catch</code> vs Adding <code>onsuccess/onerror</code> to every request</li>
<li>demo in summary ..</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>Programming</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>IT</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript basics</title>
    <url>/blog/2020/05/18/js-basics/</url>
    <content><![CDATA[<h1 id="Var-Data-types-amp-Ops"><a href="#Var-Data-types-amp-Ops" class="headerlink" title="Var, Data types &amp; Ops"></a>Var, Data types &amp; Ops</h1><h2 id="Var"><a href="#Var" class="headerlink" title="Var"></a>Var</h2><ul>
<li><code>let</code>, <code>const</code>: <a href="https://javascript.info/destructuring-assignment#the-rest-pattern" title="plain code block to group stmts">block</a> scope <a href="https://javascript.info/closure">..</a> — <a href="" title="fn/global scope; dec hoist/raise, allow redec(latter ignored)">the old “var”</a> &amp; <a href="" title="immediately-invoked fn-expr">IIFE</a></li>
</ul>
<h2 id="Data-types"><a href="#Data-types" class="headerlink" title="Data types"></a>Data types</h2><ul>
<li><strong>dynamic typed</strong>, <a href="" title="num/bigInt, str, bool, null/undefined, obj/symbol">7+1</a> basic data types</li>
<li><code>typeof</code> — <code>null</code>: “object”, <code>alert</code>: “function” <a href="https://javascript.info/types#type-typeof">..</a></li>
</ul>
<a id="more"></a>

<h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><ul>
<li>int/float &amp; <code>Infinity</code>, <code>-Infinity</code>, <code>NaN</code> <a href="https://javascript.info/types#number">..</a><ul>
<li>64-bit — Imprecise calc &amp; BigInt <a href="https://javascript.info/number">..</a></li>
<li>repre: <code>e</code>, hex/bin/octal — <code>parseInt/-float()</code>, <code>toString(base)</code></li>
<li>regular num &amp; NaN test: <code>isFinite()</code>, <code>isNaN()</code> vs <code>Object.is()</code></li>
<li>rounding: multiply-and-divide &amp; <code>toFixed(n)</code> </li>
<li>check for int: <code>Math.round(n) == n</code> <a href="https://javascript.info/testing-mocha">..</a></li>
</ul>
</li>
<li>auto type convert: unary <code>+</code>, math-op/fn &amp; <code>Number(value)</code></li>
<li>tasks: <a href="https://javascript.info/number#why-6-35-tofixed-1-6-3">Why 6.35.toFixed(1) == 6.3?</a>, <a href="https://javascript.info/number#a-random-integer-from-min-to-max">random int from min to max</a></li>
</ul>
<h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><ul>
<li>quotes &amp; <code>...$&#123;...&#125;</code> <a href="https://javascript.info/types#string">..</a>, special chars: <code>\n</code>, <code>\</code> <a href="https://javascript.info/string#special-characters">..</a></li>
<li>auto type convert: in output e.g. <code>alert(..)</code>, <code>toString()</code>: <a href="https://javascript.info/object-toprimitive#toprimitive">obj as key</a>, <a href="https://javascript.info/json#custom-tojson">JSON.stringify()</a> &amp; <code>String(..)</code> <a href="https://javascript.info/type-conversions#summary">..</a></li>
<li>substr <code>str.slice()</code>, str compare <code>str.localeCompare(str2)</code>, <code>str.repeat(n)</code>, charCode <code>String.fromCodePoint(code)</code> &amp; <code>str.codePointAt(i)</code> (in generate pwd <a href="https://javascript.info/generators#generator-composition">..</a>) <a href="https://javascript.info/string">..</a></li>
<li>task: <a href="https://javascript.info/string#truncate-the-text">Truncate text</a></li>
</ul>
<h3 id="Bool"><a href="#Bool" class="headerlink" title="Bool"></a>Bool</h3><ul>
<li>6 falsy values <a href="https://javascript.info/type-conversions#boolean-conversion">..</a></li>
<li>auto type convert: logical op <code>!!</code>, compareson &amp; <code>Boolean(..)</code></li>
</ul>
<h3 id="null-amp-undefined"><a href="#null-amp-undefined" class="headerlink" title="null &amp; undefined"></a>null &amp; undefined</h3><ul>
<li><code>null</code> : value unknown; </li>
<li><code>undefined</code>: init val for unassigned-var &amp; default fn-return</li>
<li>Nullish coalescing op <code>??</code> </li>
</ul>
<h2 id="Ops"><a href="#Ops" class="headerlink" title="Ops"></a>Ops</h2><ul>
<li>compare diff type (convert to num) &amp; <code>null == undefined</code> , <code>NaN != NaN</code> &amp; <code>===</code></li>
<li><code>=</code> <a href="https://javascript.info/operators#assignment">..</a> &amp; <code>,</code> <a href="https://javascript.info/operators#comma">..</a></li>
</ul>
<h1 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h1><p><strong>Fn creation</strong> <a href="https://javascript.info/function-expressions#function-expression-vs-function-declaration">..</a></p>
<ul>
<li><strong>fn dec</strong>: block-level (if strict), def-hoisting (start with <code>function</code>, require a name &amp; cannot be called immediately <a href="https://javascript.info/var#iife">..</a>)</li>
<li><strong>fn-expr</strong>: easy dynamic def </li>
<li><strong>arrow-fn</strong> (see obj)</li>
<li><code>new Function([...params]: ...str, body: str)</code>: create fn dynamically at run time (golbal scope) <a href="https://javascript.info/new-function">..</a> — <code>eval(code: str)</code> <a href="https://javascript.info/eval">..</a></li>
</ul>
<p><strong>Fn is obj</strong><br>Fn: a callable action (instead of data <a href="https://javascript.info/function-expressions#callback-functions">..</a>) obj <a href="https://javascript.info/function-object">..</a></p>
<ul>
<li>fn-def: store the fn-obj in same named var, call by <code>fnName(...args)</code> — callback &amp; <em>anonymous</em> <a href="https://javascript.info/function-expressions#callback-functions">..</a></li>
<li>Fn built-in props: <code>name</code> (str, “” for anonymous), <code>length</code> (param #, rest param not count)</li>
<li>custom prop/helper method: <code>fnName.xxx = ..</code></li>
<li>tasks: <a href="https://javascript.info/function-object#set-and-decrease-for-counter">Set and decrease for counter</a>, <a href="https://javascript.info/function-object#sum-with-an-arbitrary-amount-of-brackets">Sum with an arbitrary amount of brackets</a></li>
</ul>
<p><strong>Closure</strong></p>
<ul>
<li>block scope &amp; Lexical Environment (EnvRecord &amp; outer-ref, created on run time) …</li>
<li>LE var/fn pre-populate &amp; var “dead zone” <a href="https://javascript.info/closure#is-variable-visible">..</a></li>
<li>access var through <strong>LE chain</strong> (inner-outer) <a href="https://javascript.info/closure#step-3-inner-and-outer-lexical-environment">..</a> &amp; updated on the LE it lives <a href="https://javascript.info/closure#step-4-returning-a-function">..</a></li>
</ul>
<p><a href="https://javascript.info/closure#step-4-returning-a-function">Closure</a>: a fn that remembers its outer vars and can access them by e.g. return a fn (or as obj prop) <a href="https://javascript.info/closure#nested-functions">..</a></p>
<ul>
<li>run outerFn: new outerFn.LE &amp; nestedFn created, <code>nestedFn.[[Env..]] = outerFn.LE</code> (set once &amp; forever)<ul>
<li>so outerFn.LE still reachable &amp; not GC <a href="https://javascript.info/closure#garbage-collection">..</a></li>
<li>call outerFn mtp times: diff outerFn.LE &amp; nestedFn created (nestedFn independent) <a href="https://javascript.info/closure#are-counters-independent">..</a></li>
</ul>
</li>
<li>run nestedFn: new nestedFn.LE created &amp; <code>nestedFn.LE -&gt; outerFn.LE</code> (ref value taken from [[Env..]])</li>
<li>task: <a href="https://javascript.info/closure#counter-object">Counter object</a>, <a href="https://javascript.info/closure#sum-with-closures">Sum with closures</a>, <a href="https://javascript.info/closure#filter-through-function">Filter through function</a>, <a href="https://javascript.info/closure#sort-by-field">Sort by field</a>, <a href="https://javascript.info/closure#army-of-functions">Army of functions</a></li>
</ul>
<h1 id="Obj-Arrow-Fn-Con-Fn"><a href="#Obj-Arrow-Fn-Con-Fn" class="headerlink" title="Obj, Arrow Fn, Con-Fn"></a>Obj, Arrow Fn, Con-Fn</h1><p><strong>obj</strong> — str/symbol: any type</p>
<ul>
<li>key can be reserved word, non-str/symbol key ==&gt; toString <a href="https://javascript.info/object#property-names-limitations">..</a></li>
</ul>
<p>syntax</p>
<ul>
<li>key existence test: <code>in</code> op &amp; optional chaining syntax <code>?.</code>  (check <code>null/undefined</code>)</li>
<li>key iterate: <code>for..in</code> loop &amp; prop order ..</li>
<li>value access: <code>.</code> vs <code>obj[&quot;prop&quot;]</code> <a href="https://javascript.info/object#square-brackets">..</a></li>
<li>prop add/set: <code>obj.prop = xxx</code>, delete: <code>delete obj.prop</code> <a href="https://javascript.info/object#literals-and-properties">..</a></li>
<li>computed prop, prop value shorthand ..</li>
</ul>
<p>obj deep cloning: <code>for..in</code> &amp; <code>typeof</code> <a href="https://javascript.info/object-copy#cloning-and-merging-object-assign">..</a></p>
<p>tasks <a href="https://javascript.info/object#ordered-like-an-object">Check for emptiness</a></p>
<!-- more -->

<h2 id="Methods-amp-“this”"><a href="#Methods-amp-“this”" class="headerlink" title="Methods &amp; “this”"></a>Methods &amp; “this”</h2><p>method def: fn-expr shorthand || copy from fn <a href="https://javascript.info/object-methods#method-examples">..</a></p>
<p><code>this</code> eval at run-time — <a href="https://javascript.info/bind#losing-this" title="obj method passed around &amp; called in another context">losing “this” problem</a></p>
<ul>
<li>call fn with obj (“this” in methods): <code>this=obj</code> <a href="https://javascript.info/object-methods#this-in-methods">..</a></li>
<li>call fn without obj (as fn itself) <a href="https://javascript.info/object-methods#this-is-not-bound">..</a><ul>
<li><code>this=undefined</code> if strict &amp; <code>arr.forEach(fn)</code> <a href="https://javascript.info/arrow-functions#arrow-functions-have-no-this">..</a></li>
<li><code>this=window</code> if non-strict &amp; <code>setTimeout(fn, ms)</code> <a href="https://javascript.info/bind#losing-this">..</a>, <a href="https://javascript.info/call-apply-decorators#delaying-decorator">..</a></li>
</ul>
</li>
<li>tasks: <a href="https://javascript.info/object-methods#using-this-in-object-literal">Using “this” in object literal</a>, <a href="https://javascript.info/object-methods#create-a-calculator">calculator</a>, <a href="https://javascript.info/object-methods#create-a-calculator">Chaining</a></li>
<li>losing this problem &amp; <a href="https://javascript.info/reference-type">reference type</a>, task: <a href="https://javascript.info/reference-type#explain-the-value-of-this">Explain the value of “this”</a></li>
</ul>
<p>bind “this”</p>
<ul>
<li><a href="https://javascript.info/bind#solution-2-bind">fn binding</a>: <code>fn.bind(context, [...startingArgs])</code><ul>
<li><code>this=context</code> (bound <a href="https://javascript.info/bind#bound-function-as-a-method" title="use pre-bound context value (even bound obj changes later), so cannot re-bound">hard-fixed</a>), partial <a href="https://javascript.info/bind#partial-functions">..</a>, <a href="https://javascript.info/bind#going-partial-without-context">..</a></li>
<li>tasks: <a href="https://javascript.info/bind#bound-function-as-a-method">Bound fn in method</a>, <a href="https://javascript.info/bind#second-bind">re-bound ignored</a>, <a href="https://javascript.info/bind#function-property-after-bind">Fn prop lost af bind</a>, <a href="https://javascript.info/bind#fix-a-function-that-loses-this">method bind context in callbacks</a>, <a href="https://javascript.info/bind#partial-application-for-login">Partial &amp; method</a></li>
</ul>
</li>
<li><a href="https://javascript.info/call-apply-decorators#func-apply" title="Passing all args context to another fn">call forwarding</a>: <code>fn.apply(context, args: arrLike)</code> (prefer) &amp; <code>fn.call(context, ...args);</code></li>
<li><a href="https://javascript.info/call-apply-decorators#method-borrowing" title="take a method from an obj and call it in the context of another obj">fn-borrowing</a>: <code>[].join.call(arguments);</code> in fn-body</li>
</ul>
<h2 id="Obj-amp-Fn"><a href="#Obj-amp-Fn" class="headerlink" title="Obj &amp; Fn"></a>Obj &amp; Fn</h2><h3 id="Arrow-fn"><a href="#Arrow-fn" class="headerlink" title="Arrow fn"></a>Arrow fn</h3><p><code>(...args) =&gt; expr || &#123; ...body &#125; || (obj-litiral)</code> <a href="https://javascript.info/array-methods#map-to-objects">..</a></p>
<ul>
<li>no own <code>this</code> (cann’t run with <code>new</code>) 、<code>super</code> <a href="https://javascript.info/class-inheritance#overriding-a-method">..</a> &amp; <code>arguments</code> (no own context <a href="https://javascript.info/arrow-functions">..</a>, take from outer LE) <a href="https://javascript.info/arrow-functions#summary">..</a></li>
</ul>
<h3 id="F-Constructor-fn"><a href="#F-Constructor-fn" class="headerlink" title="F: Constructor fn"></a>F: Constructor fn</h3><ul>
<li>set props &amp; methods <code>this.xxx = ...</code></li>
<li>call by <code>new</code> op (execute “internal algorithm”)<ul>
<li>return this ||  another obj (prim-return ignored)</li>
<li>Constructor mode test: <code>new.target</code></li>
</ul>
</li>
<li>singleton obj <code>new function() &#123; ... &#125;</code></li>
</ul>
<h1 id="Built-in-Data-Structure"><a href="#Built-in-Data-Structure" class="headerlink" title="Built-in Data Structure"></a>Built-in Data Structure</h1><h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><ul>
<li>value indexing: <code>arr[i]</code>, value iter: <code>for..of</code> || <code>arr.forEach()</code></li>
<li><code>arr.length</code> = greatest index + 1, init as item #, writable<ul>
<li>manually increase: <code>undefined</code> values (<code>&quot;&quot;</code> in <code>toString()</code>)</li>
<li>manually decrease: elem lost — clear arr <code>arr.length = 0</code>    </li>
</ul>
</li>
<li><code>delete arr[i]</code>: value =&gt; <code>undefined</code> (<code>length</code> keep same) <a href="https://javascript.info/array-methods#splice">..</a></li>
<li><code>arr.toString()</code> =&gt; <code>_,_,_...</code></li>
<li><a href="https://javascript.info/keys-values-entries#object-keys-values-entries">Object.keys/values/entries(obj)</a> =&gt; arr (enum &amp; non-symbol key)<ul>
<li>task: <a href="https://javascript.info/keys-values-entries#sum-the-properties">Sum the props</a></li>
</ul>
</li>
</ul>
<!-- more  -->
<p>Methods <a href="https://javascript.info/array-methods#summary">..</a></p>
<ul>
<li><code>splice(..)</code> : […rmed-elems]</li>
<li><code>filter(fn)</code>: […matchedItems], <code>find(fn)</code>, <code>indexOf()</code>, <code>includes()</code></li>
<li><code>map(fn)</code> &amp; <code>reduce(..)</code>, <code>sort(..)</code> &amp; <code>reverse()</code></li>
<li><code>arr.join(glue=&#39;,&#39;)</code> &amp; <code>str.split(delim)</code> (<code>(&#39;&#39;)</code>: char[])</li>
<li><code>Array.isArray(value)</code></li>
</ul>
<p><strong>Iterable &amp; array-like</strong></p>
<ul>
<li><strong>iterable</strong> (e.g. arr &amp; str) can be used in <code>for..of</code> <a href="https://javascript.info/iterable">..</a></li>
<li>array-like: obj with <strong>numeric index &amp; length</strong> <a href="https://javascript.info/iterable#array-like">..</a></li>
<li>str both iter &amp; arr-like <a href="https://javascript.info/iterable#array-like">..</a> — <code>str[i]</code> &amp; <code>str.length</code> </li>
<li>iter/arr-like =&gt; array: <code>Array.from(obj, ..)</code></li>
</ul>
<p><code>...</code>: <strong>Spread syntax &amp; Rest param</strong></p>
<ul>
<li>Spread syntax: <code>...iter</code>: item list (use <strong>for..of</strong> internally) <ul>
<li>copy/merge/convert by <code>[...iter]</code> / <code>&#123;...obj&#125;</code></li>
</ul>
</li>
<li>Rest params: <code>...arr</code> in fn-def<ul>
<li>fn can be called with any # of args (only args assoc with param will be count) <a href="https://javascript.info/rest-parameters-spread#rest-parameters">..</a></li>
<li>the old <code>arguments</code> (both iter &amp; arr-like) <a href="https://javascript.info/rest-parameters-spread#the-arguments-variable">..</a></li>
</ul>
</li>
</ul>
<p><strong>Destructuring assignment syntax</strong></p>
<ul>
<li>Copying iter-items into vars: <code>let [...vars]/&#123;...obj-props&#125; = arr/obj</code> (keep origin unmodified)<ul>
<li>ignore arr-item by extra <code>,</code> <a href="https://javascript.info/destructuring-assignment#array-destructuring">..</a>, <code>:</code> for prop-var rename <a href="https://javascript.info/destructuring-assignment#object-destructuring">..</a>, <code>=</code> for var/obj-prop-var default value (unprovide value in right-side as <strong>undefined</strong>) <a href="https://javascript.info/destructuring-assignment#default-values">..</a>, </li>
</ul>
</li>
<li>easy swap: <code>[guest, admin] = [admin, guest];</code></li>
<li><a href="https://javascript.info/destructuring-assignment#nested-destructuring">nested desructing</a> : same structure (no var for the group one)</li>
<li><a href="https://javascript.info/destructuring-assignment#smart-function-parameters">Smart fn params</a>: pass obj as fn param</li>
<li>obj destcructing to existing var: <code>(</code>{…}<code>)</code> ({} in main code flow as code block) <a href="https://javascript.info/destructuring-assignment#the-rest-pattern">..</a></li>
</ul>
<p>tasks </p>
<ul>
<li><a href="https://javascript.info/array#a-maximal-subarray">A maximal subarray</a></li>
<li><a href="https://javascript.info/array-methods#filter-range-in-place">Filter range “in place”</a></li>
<li><a href="https://javascript.info/array-methods#sort-in-decreasing-order">Sort in decreasing order</a></li>
<li><a href="https://javascript.info/array-methods#create-an-extendable-calculator">Create an extendable calculator</a></li>
<li><a href="https://javascript.info/array-methods#sort-users-by-age">Sort users by age</a></li>
<li><a href="https://javascript.info/array-methods#shuffle-an-array">Shuffle an array</a></li>
<li><a href="https://javascript.info/array-methods#filter-unique-array-members">Filter unique array members</a></li>
<li><a href="https://javascript.info/array-methods#create-keyed-object-from-array">Create keyed object from array</a></li>
</ul>
<h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><ul>
<li>Send data: <code>JSON.stringify(obj, ..)</code> &amp; <code>obj.toJSON()</code>: formatted str (aka <em>serialized</em> obj)</li>
<li>Get data: <code>JSON.parse(str, ..)</code>: obj</li>
</ul>
<h1 id="Prototypal-inheritance"><a href="#Prototypal-inheritance" class="headerlink" title="Prototypal inheritance"></a>Prototypal inheritance</h1><p><strong>[[Prototype]] &amp; prototype</strong></p>
<ul>
<li><code>[[Prototype]]</code>: null || obj (aka <strong>prototype</strong>) <a href="https://javascript.info/prototype-inheritance">..</a>, accessor methods &amp; fully obj-clone <a href="https://javascript.info/prototype-methods">..</a></li>
<li>the deprecated <code>__proto__</code> prop <a href="https://javascript.info/prototype-inheritance#prototype">..</a>, reside in <code>Object.prototype</code> <a href="https://javascript.info/prototype-methods#very-plain">..</a> (why depr &amp; “Very plain / pure dict” obj <a href="https://javascript.info/prototype-methods#very-plain">..</a>)</li>
</ul>
<p><strong>Prototypal inheritance</strong>: prop not exist in the obj -&gt; find from proto (follow <code>[[Prototype]]</code> ref chain) <a href="https://javascript.info/prototype-inheritance#summary">..</a></p>
<ul>
<li>proto only for reading prop, write/delete data prop act on the obj (write may call setter in proto) <a href="https://javascript.info/prototype-inheritance#writing-doesn-t-use-prototype">..</a></li>
<li>proto search opt <a href="https://javascript.info/prototype-inheritance#searching-algorithm">..</a></li>
<li><code>this</code> in proto method: ref to obj bf <code>.</code> (method shared but obj state not) <a href="https://javascript.info/prototype-inheritance#the-value-of-this">..</a></li>
<li>inherited prop in <code>for..in</code> (if enum) but not in <code>Object.keys/values()</code> , diff by <code>obj.hasOwnProperty(key)</code> <a href="https://javascript.info/prototype-inheritance#for-in-loop">..</a></li>
<li>task: <a href="https://javascript.info/prototype-methods#add-tostring-to-the-dictionary">add toString() to the “very plain” obj</a></li>
</ul>
<p><strong>F.protoype</strong>: a “normal” prop of con-fn F, set <code>[[Proto..]]</code> for obj from F when <code>new F()</code></p>
<ul>
<li><code>let obj = new F()</code>: set <code>obj.[[Prototype]] = F.prototype</code> (<code>&#123;constructor: F&#125;</code> by default)</li>
<li>so <code>obj.constructor === F</code> &amp; <code>let obj2 = new obj.constructor()</code><ul>
<li>task: <a href="https://javascript.info/function-prototype#create-an-object-with-the-same-constructor">Create obj with same constructor</a></li>
</ul>
</li>
<li>re-assign <strong>F.protoype</strong> to another obj: prev created obj.[[Prototype]] not affect</li>
<li>native F.prototypes<ul>
<li><code>Object.prototype</code>: inherited to all obj, ref to a huge obj with toString and other methods<ul>
<li><code>Object.prototype.__proto__ = null</code></li>
</ul>
</li>
<li>Built-in obj (e.g. obj, arr, fn, num 5): store data in obj itself, store methods in prototype <a href="https://javascript.info/native-prototypes#other-built-in-prototypes">..</a> &amp; <a href="https://javascript.info/native-prototypes#summary">..</a></li>
</ul>
</li>
<li>Check prototype chain by <code>console.dir(obj)</code> <a href="https://javascript.info/native-prototypes#other-built-in-prototypes">..</a></li>
<li>task: <a href="https://javascript.info/native-prototypes#add-the-decorating-defer-to-functions">Add decorating “defer()” to fns</a>, <a href="https://javascript.info/prototype-methods#the-difference-between-calls">the diff btw calls</a></li>
</ul>
<h1 id="Class"><a href="#Class" class="headerlink" title="Class"></a>Class</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">F</span> </span>&#123;</span><br><span class="line">  [<span class="keyword">static</span>] field = ..; <span class="comment">// access field in method by &quot;this.xxx&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(..) &#123; <span class="comment">/*..*/</span> &#125; <span class="comment">// called when &quot;new&quot;</span></span><br><span class="line">  </span><br><span class="line">  [<span class="keyword">static</span>] method() &#123; <span class="comment">/*..*/</span> &#125; </span><br><span class="line">  [get/set] method(..) &#123; <span class="comment">/*..*/</span> &#125;</span><br><span class="line">  [expr]() &#123; <span class="comment">/*..*/</span> &#125; <span class="comment">// computed name</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>bind <code>this</code> in method <a href="https://javascript.info/class#making-bound-methods-with-class-fields">..</a><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">xxx = <span class="function">() =&gt;</span> &#123;..&#125; <span class="comment">// field store in obj itself (&quot;this&quot; = obj)</span></span><br><span class="line"><span class="built_in">this</span>.xxx = <span class="built_in">this</span>.xxx.bind(<span class="built_in">this</span>); <span class="comment">// bind existing method in constructor </span></span><br></pre></td></tr></table></figure></li>
<li>access <code>static</code> outside F: <code>F.xxx</code> (<code>F</code> as     <code>this</code>) <a href="https://javascript.info/static-properties-methods#static-properties">..</a>, <a href="https://javascript.info/static-properties-methods">..</a><ul>
<li>return obj in static method by <code>new this(..)</code> (factory method)</li>
</ul>
</li>
<li>Class Encapsulation <a href="https://javascript.info/private-protected-properties-methods">..</a><ul>
<li><strong>protected</strong>: <code>_xxx</code> (convention) — <code>proxy</code> <a href="https://javascript.info/proxy#protected-properties-with-deleteproperty-and-other-traps">..</a></li>
<li><strong>private</strong>: <code>#xxx</code> (proposal, cannot access by <code>this[&#39;#xxx&#39;]</code>)</li>
<li><strong>read-only prop</strong>: only getter no setter (set value on con)</li>
</ul>
</li>
<li>task: <a href="https://javascript.info/class#rewrite-to-class">class Clock</a></li>
</ul>
<h2 id="Class-vs-fn"><a href="#Class-vs-fn" class="headerlink" title="Class vs fn"></a>Class vs fn</h2><p><code>typeof F</code>: <code>&quot;function&quot;</code> <a href="https://javascript.info/class#what-is-a-class">..</a></p>
<ul>
<li><code>class F &#123; .. &#125;</code>: <strong>F</strong> (con-fn) &amp; <strong>F.prototype</strong> <a href="https://javascript.info/class#what-is-a-class">..</a><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">F: &#123;</span><br><span class="line">  ...statics,</span><br><span class="line"> <span class="keyword">constructor</span>(),</span><br><span class="line">  [[Prototype]]: ParentF || Function.prototype </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">F.prototype: &#123; </span><br><span class="line">  ...methods, <span class="comment">// non-enum</span></span><br><span class="line">  <span class="keyword">constructor</span>: F, </span><br><span class="line">   [Prototype]]: ParentF.prototype || Object.prototype </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li>
<li><code>new F()</code>: obj<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">obj: &#123;</span><br><span class="line">  ...fields,</span><br><span class="line">  [[Prototype]]: F.prototype <span class="comment">// access to non-static methods</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>class &amp; fn diffs <a href="https://javascript.info/class#not-just-a-syntactic-sugar">..</a></li>
</ul>
<h2 id="Class-inheritance"><a href="#Class-inheritance" class="headerlink" title="Class inheritance"></a>Class inheritance</h2><p><code>extends</code> set 2 proto refs: <a href="https://javascript.info/static-properties-methods#inheritance-of-static-properties-and-methods">..</a></p>
<ul>
<li><code>F1.[[Prototype]] = F2</code> (con-fn inheritance, for statics)</li>
<li><code>F1.prototype.[[Prototype]] = F2.protptype</code> (for methods)</li>
</ul>
<p><strong>Member overriding</strong></p>
<ul>
<li>override con/method: <code>super(..)</code> &amp; <code>super.method(..)</code> <a href="https://javascript.info/class-inheritance#overriding-a-method">..</a><ul>
<li>default child-con: <code>super(...args)</code> <a href="https://javascript.info/class-inheritance#overriding-constructor">..</a></li>
<li>call <code>super(..)</code> in child-con bf using <code>this</code> <a href="https://javascript.info/class-inheritance#overriding-constructor">..</a> (<a href="https://javascript.info/class-inheritance#super-internals-homeobject">why?</a>)<ul>
<li>when <code>new</code>: child-con create <code>this</code> by parent-con (in regular fn, an empty obj created for <code>this</code>) <a href="https://javascript.info/class-inheritance#overriding-constructor">..</a></li>
<li>method.<code>[[HomeObject]]</code> = their class/obj <a href="https://javascript.info/class-inheritance#homeobject">..</a> (bound forever <a href="https://javascript.info/class-inheritance#methods-are-not-free">..</a>) &amp; <code>super</code> find parent methods in <code>[[HomeObject]].[[Prototype]]</code> <a href="https://javascript.info/mixins#a-mixin-example">..</a></li>
<li>so method with <code>super</code> not free (it uses <code>[[HomeObject]]</code>) <a href="https://javascript.info/class-inheritance#methods-are-not-free">..</a></li>
<li><code>super</code> only work for <code>method()</code>, not <code>method: function() &#123; .. &#125;</code> <a href="https://javascript.info/class-inheritance#methods-not-function-properties">..</a></li>
</ul>
</li>
</ul>
</li>
<li>override field: <code>field = ..</code> (parent-con use own field value, not overriden one) <a href="https://javascript.info/class-inheritance#overriding-class-fields-a-tricky-note">..</a></li>
<li>task: <a href="https://javascript.info/class-inheritance#extended-clock">Extended clock</a>, <a href="https://javascript.info/static-properties-methods#class-extends-object">Class extends Object?</a></li>
</ul>
<p><strong>Extending built-in classes</strong> <a href="https://javascript.info/extend-natives">..</a></p>
<p><strong>Class Type Checking</strong> <a href="https://javascript.info/instanceof">..</a></p>
<ul>
<li><code>obj instanceof F</code> — <code>F[Symbol.hasInstance](obj)</code> &amp; <code>F.prototype.isPrototypeOf(obj)</code></li>
<li><code>Object.prototype.toString</code>: <code>[object xxx]</code> (xxx: value of <code>obj[Symbol.toStringTag]</code>)</li>
</ul>
<h2 id="Mixin"><a href="#Mixin" class="headerlink" title="Mixin"></a>Mixin</h2><p>A class / obj contains methods for other classes without inheritance</p>
<ul>
<li>imp by copying method into prototype <code>Object.assign(F.prototype, mixin)</code> (prevent overwrite)</li>
<li><a href="https://javascript.info/mixins#eventmixin">EventMixin example</a></li>
</ul>
<h1 id="Error-handling"><a href="#Error-handling" class="headerlink" title="Error handling"></a>Error handling</h1><p>Error obj: <code>new Error/Syntax*/Reference*/Type*(msg)</code> <a href="https://javascript.info/try-catch#throw-operator">..</a></p>
<ul>
<li>props: <code>name</code>(F): <code>message</code> e.g. “Ref..Error: xxx is not defined” in alert <a href="https://javascript.info/try-catch#error-object">..</a></li>
</ul>
<p><code>try..catch..finally</code>: <strong>sync</strong> &amp; <strong>run-time</strong> err / exception <a href="https://javascript.info/try-catch#the-try-catch-syntax">..</a></p>
<ul>
<li>throw err (in try || rethrow in catch): <code>throw</code></li>
<li>checking err: <code>instanceof</code> <a href="https://javascript.info/custom-errors#extending-error">..</a></li>
<li>Global handler: <code>window.onerror</code> <a href="https://javascript.info/try-catch#global-catch">..</a></li>
</ul>
<p>custom err/ extending err: <code>ValidationError</code> <a href="https://javascript.info/custom-errors#extending-error">..</a> &amp; <code>PropertyRequiredError</code> example <a href="https://javascript.info/custom-errors#further-inheritance">..</a></p>
<ul>
<li>set name: <code>this.name = this.constructor.name;</code></li>
<li>wrapping-exception pattern: catch syntax &amp; validation errs and throws ReadError <a href="https://javascript.info/custom-errors#wrapping-exceptions">..</a></li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>Programming</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>IT</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript &amp; DOM</title>
    <url>/blog/2020/06/30/js-dom/</url>
    <content><![CDATA[<h1 id="JS-intro"><a href="#JS-intro" class="headerlink" title="JS intro"></a>JS intro</h1><ul>
<li>init to <strong>make webpages alive</strong> <a href="https://javascript.info/intro">..</a>, run on platforms with <strong>JS engine</strong> (in browser aka “JS VM”,  e.g. “V8” in Chrome &amp; Opera) <a href="https://javascript.info/intro#what-is-javascript">..</a><ul>
<li>browser env: <code>window</code> (root obj) =&gt; JS / DOM / BOM <a href="https://javascript.info/browser-environment">..</a></li>
<li><a href="https://javascript.info/browser-environment#bom-browser-object-model">BOM</a>: <code>navigator</code> obj, <code>location.href</code>, model win fn: <code>alert()</code>, <code>prompt()</code>, <code>confirm()</code> <a href="https://javascript.info/alert-prompt-confirm">..</a></li>
</ul>
</li>
<li>JS in HTML: <code>&lt;script&gt;..&lt;/script&gt;</code> &amp; <code>&lt;script src=..&gt;&lt;/script&gt;</code> <a href="https://javascript.info/hello-world">..</a> <ul>
<li><code>type=&quot;text/javascript&quot; language=&quot;javascript&quot;</code> attr no need anymore <a href="https://javascript.info/hello-world#modern-markup">..</a></li>
<li>inline content ignored if <code>src</code> set <a href="https://javascript.info/hello-world#external-scripts">..</a></li>
<li>browser cache external script for re-use <a href="https://javascript.info/hello-world#external-scripts">..</a></li>
</ul>
</li>
<li>in-browser JS restrictions <a href="https://javascript.info/intro#what-can-t-in-browser-javascript-do">…</a></li>
</ul>
<a id="more"></a>

<h1 id="DOM-tree"><a href="#DOM-tree" class="headerlink" title="DOM tree"></a>DOM tree</h1><ul>
<li>repre HTML/XML doc structure <a href="https://javascript.info/dom-nodes#summary">..</a> (inc <code>&lt;!DOCTYPE HTML&gt;</code> <a href="https://javascript.info/dom-nodes#other-node-types">..</a>), built when pages loading <a href="https://javascript.info/dom-attributes-and-properties">..</a> (auto-correction <a href="https://javascript.info/dom-nodes#autocorrection">..</a>)</li>
<li>rooted at <code>document</code> (repre the whole doc<a href="https://javascript.info/dom-nodes#other-node-types">..</a>) — <code>document.documentElement/.head /.body</code> <a href="https://javascript.info/dom-navigation#on-top-documentelement-and-body">..</a></li>
<li>interact DOM elem in console <a href="https://javascript.info/dom-nodes#interaction-with-console">..</a></li>
</ul>
<p>DOM node class hierarchy <a href="https://javascript.info/basic-dom-node-properties#dom-node-classes">..</a></p>
<ul>
<li>Node: Element, Text, Comment, Document (e.g. <code>HTMLDocument</code> instance <code>document</code> <a href="https://javascript.info/basic-dom-node-properties#where-s-the-document-in-the-hierarchy">..</a>)</li>
<li>type check: <code>node.nodeName</code> / <code>elem.tagName</code> <a href="https://javascript.info/basic-dom-node-properties#tag-nodename-and-tagname">..</a></li>
</ul>
<h1 id="HTML-Attr-amp-JS-Prop"><a href="#HTML-Attr-amp-JS-Prop" class="headerlink" title="HTML Attr &amp; JS Prop"></a>HTML Attr &amp; JS Prop</h1><ul>
<li><strong>HTML-attr</strong>: case-insensitive &amp; value: str <a href="https://javascript.info/dom-attributes-and-properties#html-attributes">..</a><ul>
<li>HTML <code>hidden</code> attr — <code>style=&quot;display:none</code> <a href="https://javascript.info/basic-dom-node-properties#the-hidden-property">..</a></li>
</ul>
</li>
<li><strong>DOM prop</strong>: case-sensitive &amp; value: any type <a href="https://javascript.info/dom-attributes-and-properties#dom-properties">..</a></li>
<li>access attr by elem methods <a href="https://javascript.info/dom-attributes-and-properties#html-attributes">..</a></li>
<li>prop-attr sync <a href="https://javascript.info/dom-attributes-and-properties#property-attribute-synchronization">..</a> &amp; prop-attr type diff <a href="https://javascript.info/dom-attributes-and-properties#dom-properties-are-typed">..</a></li>
<li>customized attr <a href="https://javascript.info/dom-attributes-and-properties#non-standard-attributes-dataset">..</a>: pass data to JS || “mark” HTML-elem for JS<ul>
<li>naming: <code>data-*</code>, access: <code>dataset.xxx</code> (mtp-word camelCase)</li>
</ul>
</li>
</ul>
<h1 id="DOM-modification"><a href="#DOM-modification" class="headerlink" title="DOM modification"></a>DOM modification</h1><p><strong>Node Creation</strong>: <code>document.createElement(tag: str)</code><a href="https://javascript.info/modifying-document#creating-an-element">..</a>, <code>elem.cloneNode(..)</code> <a href="https://javascript.info/modifying-document#cloning-nodes-clonenode">..</a></p>
<p><strong>Node Selection</strong> <a href="https://javascript.info/searching-elements-dom">..</a></p>
<ul>
<li><code>elem.querySelector*(css: str)</code> — css: <code>&#39;tag[attr]&#39;</code> <a href="https://javascript.info/dom-attributes-and-properties#make-external-links-orange">..</a> &amp; <a href="https://javascript.info/searching-elements-dom#matches">..</a></li>
<li>other query methods <a href="https://javascript.info/searching-elements-dom#summary">..</a> </li>
<li><strong>nav props</strong> (child, parent, sibling, read-only) <a href="https://javascript.info/dom-navigation">..</a></li>
<li>table props <a href="https://javascript.info/dom-navigation#dom-navigation-tables">..</a></li>
</ul>
<h2 id="Node-modification"><a href="#Node-modification" class="headerlink" title="Node modification"></a>Node modification</h2><h3 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h3><ul>
<li><code>elem.innerHTML</code> <a href="https://javascript.info/basic-dom-node-properties#innerhtml-the-contents">..</a><ul>
<li>innerHTML += xxx: replace instead addition (resrc reload, selection &amp; input rmed)</li>
<li>insert <code>&lt;script&gt;</code> by innerHTML: inserted but not executed</li>
<li>elem.<strong>outerHTML</strong> = innerHTML + elem itself <a href="https://javascript.info/basic-dom-node-properties#outerhtml-full-html-of-the-element">..</a><ul>
<li>write to elem.outerHTML: replace node in DOM but <strong>not change elem</strong> itself (var still ref to the old value) — query again</li>
</ul>
</li>
</ul>
</li>
<li><code>elem.textContent</code>: inner text without tags, insert as text (safer then <code>innerHTML</code>)</li>
<li><code>Text/Comment.data</code>: text/cmt content of the node (similar to <strong>nodeValue</strong> prop) <a href="https://javascript.info/basic-dom-node-properties#nodevalue-data-text-node-content">..</a></li>
<li>task: <a href="https://javascript.info/basic-dom-node-properties#count-descendants">Count descendants</a>, <a href="https://javascript.info/modifying-document#create-a-calendar">Create a calendar</a>, <a href="https://javascript.info/modifying-document#sort-the-table">Sort the table</a></li>
</ul>
<h3 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h3><p>css class style (prefer <a href="https://javascript.info/styles-and-classes">..</a>)</p>
<ul>
<li>read class style: <code>getComputedStyle(elem, ..).&lt;camelCaseProp&gt;</code>: str with unit (of resolved value), e.g. “20px” <a href="https://javascript.info/styles-and-classes#computed-styles-getcomputedstyle">..</a></li>
<li>set class: <code>elem.className</code> (whole replace) / <code>elem.classList</code> (single class) <a href="https://javascript.info/styles-and-classes#classname-and-classlist">..</a> </li>
</ul>
<p>style-attr style: <code>elem.style.&lt;camelCaseProp&gt;</code>: str with unit, e.g. “100px”, writable <a href="https://javascript.info/styles-and-classes#element-style">..</a></p>
<ul>
<li>rm style : <code>elem.style.xxx = &#39;&#39;</code></li>
<li>full rewrite <code>elem.style.cssText = xxx</code> || <code>setAttribute(&#39;style&#39;, cssText)</code> <a href="https://javascript.info/styles-and-classes#resetting-the-style-property">..</a></li>
</ul>
<h3 id="Size-coords-amp-scroll"><a href="#Size-coords-amp-scroll" class="headerlink" title="Size, coords &amp; scroll"></a>Size, coords &amp; scroll</h3><p>geometry props: return num (in “px”) <a href="https://javascript.info/size-and-scroll#geometry">..</a></p>
<ul>
<li>Size props: <code>offset*</code>, <code>client*</code> <a href="https://javascript.info/size-and-scroll#geometry">…</a></li>
<li>scrolled props: <code>scroll*</code> <a href="https://javascript.info/size-and-scroll#scrollwidth-height">…</a>, <a href="https://javascript.info/size-and-scroll#scrollleft-scrolltop">…</a>  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">elem.style.height = <span class="string">`<span class="subst">$&#123;elem.scrollHeight&#125;</span>px`</span>; <span class="comment">// expand elem to full height</span></span><br><span class="line"></span><br><span class="line">elem.scrollTop = elem.scrollHeight; <span class="comment">// auto-scroll up [Events mouseover/mouseout, relatedTarget]</span></span><br><span class="line">elem.scrollTop = <span class="number">0</span> / <span class="literal">Infinity</span>       <span class="comment">// scroll to top/bottom</span></span><br></pre></td></tr></table></figure>
<ul>
<li>get doc scrolled-out part size: <code>window.pageX/YOffset</code> (num in px) <a href="https://javascript.info/size-and-scroll-window#page-scroll">..</a></li>
<li>scroll doc: <code>window.scrollBy/To(..)</code> <a href="https://javascript.info/size-and-scroll-window#window-scroll">..</a> &amp; <code>elem.scrollToView(top=true)</code>: scroll page to make elem top / bottom of the win</li>
<li>enable/forbid scroll: <code>style.overflow[X/Y]=&#39;scroll/hidden&#39;</code> (same as CSS overflow[-x/-y]) <a href="https://javascript.info/size-and-scroll#what-is-the-scrollbar-width">..</a> &amp; <a href="https://javascript.info/size-and-scroll-window#forbid-the-scrolling">..</a></li>
</ul>
</li>
<li>coords props <a href="https://javascript.info/coordinates">..</a>: <ul>
<li><code>clientX/Y</code> (rel to win, css position: <strong>fixed</strong>) &amp; <code>pageX/Y</code> (rel to doc, css position: <strong>absolute</strong>) <a href="https://javascript.info/coordinates">..</a>, <a href="https://javascript.info/coordinates#getCoords">..</a><ul>
<li><code>document.elementFromPoint(clientX, clientY)</code>: most nested elem, null if out of win <a href="https://javascript.info/coordinates#elementFromPoint">..</a></li>
</ul>
</li>
<li>get coords: <ul>
<li><code>elem.getBoundingClientRect()</code> return num (in “px”) <a href="https://javascript.info/coordinates#element-coordinates-getboundingclientrect">…</a></li>
<li><code>style.left/top</code> <a href="https://javascript.info/size-and-scroll#place-the-ball-in-the-field-center">..</a>, <code>style.width/height</code> <a href="https://javascript.info/size-and-scroll#what-is-the-scrollbar-width">..</a> =&gt; <strong>str with unit</strong></li>
</ul>
</li>
<li>tasks: <a href="https://javascript.info/coordinates#find-window-coordinates-of-the-field">Find win coords of the field</a>, <a href="https://javascript.info/coordinates#position-the-note-inside-absolute">Position the note inside (absolute)</a></li>
</ul>
</li>
</ul>
<p>Notes</p>
<ul>
<li>text overflow — padding-bottom area may filled with text <a href="https://javascript.info/size-and-scroll#sample-element">..</a></li>
<li>for elem width/height/distance, <strong>use geometry prop (e.g. clientWidth) instead</strong> getComputedStyle() <a href="https://javascript.info/size-and-scroll#don-t-take-width-height-from-css">..</a>, <a href="https://javascript.info/size-and-scroll#the-difference-css-width-versus-clientwidth">..</a></li>
<li>get win size: <code>document.documentElement.clientWidth/H</code> (without sbar)  vs <code>window.innerWeight/H</code> (inc sbar) <a href="https://javascript.info/size-and-scroll-window#width-height-of-the-window">..</a></li>
<li>get doc size (with scroll out part) <a href="https://javascript.info/size-and-scroll-window#width-height-of-the-document">..</a></li>
</ul>
<h2 id="Node-insert-move-amp-rm"><a href="#Node-insert-move-amp-rm" class="headerlink" title="Node insert, move &amp; rm"></a>Node insert, move &amp; rm</h2><ul>
<li>insert (replace) as text: <code>node.append/prepend/before/after/replaceWith(..)</code> <a href="https://javascript.info/modifying-document#insertion-methods">..</a><ul>
<li>move nodes by inserting existing one (auto rm from old place) <a href="https://javascript.info/modifying-document#node-removal">..</a></li>
</ul>
</li>
<li>insert as HTML: <code>elem.insertAdjacentHTML(..)</code> <a href="https://javascript.info/modifying-document#insertadjacenthtml-text-element">..</a> </li>
<li>removal: <code>node.remove()</code> <a href="https://javascript.info/modifying-document#node-removal">..</a></li>
<li>the old insert/rm methods <a href="https://javascript.info/modifying-document#old-school-insert-remove-methods">..</a> &amp; <code>document.write(html: str)</code> <a href="https://javascript.info/modifying-document#a-word-about-document-write">..</a>: call when onload to write html into page “right here and now” (call af load replace page content)</li>
</ul>
<h1 id="Event-handling"><a href="#Event-handling" class="headerlink" title="Event handling"></a>Event handling</h1><h2 id="Event-amp-event-obj"><a href="#Event-amp-event-obj" class="headerlink" title="Event &amp; event obj"></a>Event &amp; event obj</h2><p>events list <a href="https://javascript.info/introduction-browser-events">…</a></p>
<p>event happen -&gt; browser create event-obj (puts details into it) &amp; pass as arg to event handler <a href="https://javascript.info/introduction-browser-events#event-object">..</a> </p>
<p>Event obj: <code>e.type</code> (e.g. “click”) <a href="https://javascript.info/introduction-browser-events#event-object">..</a></p>
<p>Event Bubbling &amp; event delegation pattern</p>
<ul>
<li>3 Event phase (<a href="https://javascript.info/bubbling-and-capturing#capturing">Capturing</a>, Target, <a href="https://javascript.info/bubbling-and-capturing#bubbling">Bubbling</a> — <code>e.eventPhase</code> <a href="https://javascript.info/bubbling-and-capturing#summary">..</a>)</li>
<li>event delegation (handle event on container for mtp elems) <a href="https://javascript.info/event-delegation">..</a></li>
<li><code>e.target</code>, <code>e.currentTarget</code> <a href="https://javascript.info/bubbling-and-capturing#event-target">..</a></li>
<li>stop bubbling <a href="https://javascript.info/bubbling-and-capturing#stopping-bubbling">…</a></li>
<li>tasks: <a href="https://javascript.info/event-delegation#hide-messages-with-delegation">Hide messages with delegation</a>, <a href="https://javascript.info/event-delegation#tree-menu">toogle tree menu</a>, <a href="https://javascript.info/event-delegation#sortable-table">Sortable table</a>, <a href="https://javascript.info/event-delegation#tooltip-behavior">Tooltip behavior</a></li>
</ul>
<p>script-gen event <a href="https://javascript.info/dispatch-events">..</a> </p>
<ul>
<li>construct <a href="https://javascript.info/dispatch-events#event-constructor">..</a> &amp; <a href="https://javascript.info/dispatch-events#mouseevent-keyboardevent-and-others">..</a>, dispatch <a href="https://javascript.info/dispatch-events#dispatchevent">..</a></li>
<li>diff user event &amp; script-gen event: <code>e.isTrusted</code> <a href="https://javascript.info/dispatch-events#dispatchevent">..</a></li>
<li>custom event &amp; <code>detail</code> prop <a href="https://javascript.info/dispatch-events#custom-events">..</a>, <a href="https://javascript.info/dispatch-events#summary">..</a></li>
</ul>
<p>Event Processing Queue: Asycnly &amp; Syncly <a href="https://javascript.info/dispatch-events#events-in-events-are-synchronous">..</a> </p>
<h2 id="Event-handler-fn-e"><a href="#Event-handler-fn-e" class="headerlink" title="Event handler: fn(e)"></a>Event handler: fn(e)</h2><p>add/rm Event handler</p>
<ul>
<li><code>elem.addEventListener(e-type, handler, ..)</code> <a href="https://javascript.info/introduction-browser-events#addeventlistener">..</a><ul>
<li>work for custom event <a href="https://javascript.info/dispatch-events#bubbling-example">..</a>; allow mtp handlers (call it mtp times)</li>
<li>support <code>obj.handleEvent(e)</code> as handler <a href="https://javascript.info/introduction-browser-events#object-handlers-handleevent">..</a></li>
</ul>
</li>
<li>HTML attr <code>on&lt;event&gt;=&quot;fn-body&quot;</code> <a href="https://javascript.info/introduction-browser-events#possible-mistakes">..</a> || DOM prop <code>elem.on&lt;event&gt; = fn</code> <a href="https://javascript.info/introduction-browser-events#event-handlers">..</a>, e.g. onclick<ul>
<li>built-in events <a href="https://javascript.info/dispatch-events#bubbling-example">..</a>, 1 handler <a href="https://javascript.info/introduction-browser-events#dom-property">..</a></li>
</ul>
</li>
</ul>
<p>Others</p>
<ul>
<li><code>this</code> in handler: e.currentTarget <a href="https://javascript.info/introduction-browser-events#accessing-the-element-this">..</a> &amp; <a href="https://javascript.info/introduction-browser-events#event-object">..</a></li>
<li><code>elem.setAttribute(&#39;on&lt;event&gt;&#39;, handler)</code> not work for event handler <a href="https://javascript.info/introduction-browser-events#possible-mistakes">..</a></li>
<li>Tasks: <a href="https://javascript.info/introduction-browser-events#move-the-ball-across-the-field">Move the ball across the field</a>, <a href="https://javascript.info/introduction-browser-events#create-a-sliding-menu">Create a sliding menu</a>, <a href="https://javascript.info/introduction-browser-events#add-a-closing-button">Add a closing button</a>, <a href="https://javascript.info/introduction-browser-events#carousel">Carousel</a></li>
</ul>
<h2 id="Prevent-default-actions"><a href="#Prevent-default-actions" class="headerlink" title="Prevent default actions"></a>Prevent default actions</h2><p><code>e.preventDefault()</code> on handler || <code> on&lt;event&gt;</code> handler return false  <a href="https://javascript.info/default-browser-action#preventing-browser-actions">..</a></p>
<ul>
<li><code>e.defaultPrevented</code> (status check): true (means the event is handled somewhere) <a href="https://javascript.info/default-browser-action#event-defaultprevented">..</a> &amp; <code>elem.dispatchEvent(event)</code> return false <a href="https://javascript.info/dispatch-events#event-preventdefault">..</a></li>
<li><code>passive: true</code> option of <code>addEventListener</code>: signals that the handler not to call preventDefault() <a href="https://javascript.info/default-browser-action#the-passive-handler-option">why needed?</a></li>
<li>default browser action list <a href="https://javascript.info/default-browser-action#summary">..</a></li>
<li>Tasks: <a href="https://javascript.info/default-browser-action#why-return-false-doesn-t-work">Why “return false” doesn’t work?</a>, <a href="https://javascript.info/default-browser-action#image-gallery">Image gallery</a></li>
</ul>
<h1 id="Mouse-Event"><a href="#Mouse-Event" class="headerlink" title="Mouse Event"></a>Mouse Event</h1><ul>
<li>events list <a href="https://javascript.info/mouse-events-basics#mouse-event-types">…</a></li>
<li>mouse coords: <code>e.clientX/Y, e.pageX/Y</code> <a href="https://javascript.info/mouse-events-basics#coordinates-clientx-y-pagex-y">..</a>, mouse btn: <code>e.button</code> (=0 left-btn, =1 middle, =2 right-btn) <a href="https://javascript.info/mouse-events-basics#mouse-button">..</a></li>
<li>mouse event also inc info of modifier keys: <code>e.shiftKey/altKey/ctrlKey/metaKey</code>(Mac): bool (true if pressed) <a href="https://javascript.info/mouse-events-basics#modifiers-shift-alt-ctrl-and-meta">..</a></li>
<li>disable selection (on dblclick) &amp; copy: <code>onmousedown/oncopy return false</code> <a href="https://javascript.info/mouse-events-basics#preventing-selection-on-mousedown">..</a></li>
</ul>
<h2 id="Mouse-amp-Pointer-Event"><a href="#Mouse-amp-Pointer-Event" class="headerlink" title="Mouse &amp; Pointer Event"></a>Mouse &amp; Pointer Event</h2><p><code>mousemove</code> <a href="https://javascript.info/mouse-events-basics#coordinates-clientx-y-pagex-y">..</a>, <code>mouseover/out</code> event &amp; <code>e.relatedTarget</code> (diff with <code>mouseenter/leave</code>) <a href="https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave#summary">..</a></p>
<ul>
<li>event delegation example <a href="https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave#event-delegation">..</a></li>
<li>task: <a href="https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave#smart-tooltip">“Smart” tooltip</a> (tooltip style)</li>
<li>impl by mouse events: overall algorithm <a href="https://javascript.info/mouse-drag-and-drop#drag-n-drop-algorithm">..</a>, pointer correct positioning <a href="https://javascript.info/mouse-drag-and-drop#correct-positioning">..</a>, drappable elem hightlight <a href="https://javascript.info/mouse-drag-and-drop#potential-drop-targets-droppables">..</a><ul>
<li>draggable elem always above other elem when dragging &amp; mouse event only happen on the top elem, so eh on other elem not work, can fix by<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">draggble.hidden = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">let</span> elemBelow = <span class="built_in">document</span>.elementFromPoint(e.clientX, event.clientY);</span><br><span class="line">draggble.hidden = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>task: <a href="https://javascript.info/mouse-drag-and-drop#slider">Slider</a>, <a href="https://javascript.info/mouse-drag-and-drop#drag-superheroes-around-the-field">Drag superheroes around the field</a> (not checked yet)</li>
</ul>
</li>
</ul>
</li>
<li>Pointer Event: handling mouse, touch and pen events simultaneously, with a single piece of code <a href="https://javascript.info/pointer-events#summary">..</a></li>
</ul>
<h2 id="Scroll-Event"><a href="#Scroll-Event" class="headerlink" title="Scroll Event"></a>Scroll Event</h2><ul>
<li><code>scroll</code> event on elem &amp; win <a href="https://javascript.info/onscroll">..</a></li>
<li>task: <a href="https://javascript.info/onscroll#endless-page">Endless page</a>, <a href="https://javascript.info/onscroll#up-down-button">Up/down button</a>, <a href="https://javascript.info/onscroll#load-visible-images">Load visible images</a></li>
</ul>
<h1 id="Keyboard-Event"><a href="#Keyboard-Event" class="headerlink" title="Keyboard Event"></a>Keyboard Event</h1><p><code>keydown</code>, <code>keyup</code> <a href="https://javascript.info/keyboard-events#keydown-and-keyup">..</a></p>
<ul>
<li><code>e.code</code> (physical key loc, e.g “KeyZ”, “ShiftLeft”) vs <code>event.key</code> (meaning of key, ie. char inputted, e.g. “z” || “Z”) <a href="https://javascript.info/keyboard-events#event-code-and-event-key">..</a></li>
<li>key repeat: key pressed for a long enough time <a href="https://javascript.info/keyboard-events#auto-repeat">..</a></li>
<li>task: <a href="https://javascript.info/keyboard-events#extended-hotkeys">Extended hotkeys</a></li>
</ul>
<h1 id="Form-Ctrl"><a href="#Form-Ctrl" class="headerlink" title="Form Ctrl"></a>Form Ctrl</h1><ul>
<li>named collection: <code>document.forms</code> &amp; <code>form/fieldset.elements</code> (fieldset as subform) <a href="https://javascript.info/form-elements#navigation-form-and-elements">..</a></li>
<li>back-ref: <code>elem.form</code> <a href="https://javascript.info/form-elements#backreference-element-form">..</a></li>
<li>Form elements: input/textarea, select and option <a href="https://javascript.info/form-elements#form-elements">..</a></li>
</ul>
<h2 id="Focusing-Event"><a href="#Focusing-Event" class="headerlink" title="Focusing Event"></a>Focusing Event</h2><p><code>focus</code> / <code>blur</code> event <a href="https://javascript.info/focus-blur#events-focus-blur">..</a> &amp; <code>elem.focus/blur()</code> <a href="https://javascript.info/focus-blur#methods-focus-blur">..</a></p>
<ul>
<li>event not bubble (but capturable) — bubble version <code>focusin</code> / <code>focusout</code> event (handler assign by <code>elem.addEventListener</code>)</li>
</ul>
<p>Others</p>
<ul>
<li>get current focused elem: <code>document.activeElement</code> <a href="https://javascript.info/focus-blur#summary">..</a> — css <code>:focus</code> <a href="https://javascript.info/focus-blur#allow-focusing-on-any-element-tabindex">..</a></li>
<li><code>autofocus</code> attr <a href="https://javascript.info/focus-blur">..</a></li>
<li>enable any elem focusable: <code>tabindex</code> attr || <code>elem.tabindex</code> <a href="https://javascript.info/focus-blur#allow-focusing-on-any-element-tabindex">..</a></li>
<li>input validate attr: <code>required</code>, <code>pattern</code> <a href="https://javascript.info/focus-blur#events-focus-blur">…</a></li>
</ul>
<p>task: <a href="https://javascript.info/focus-blur#editable-div">Editable div</a>, <a href="https://javascript.info/focus-blur#edit-td-on-click">Edit TD on click</a>, <a href="https://javascript.info/focus-blur#keyboard-driven-mouse">Keyboard-driven mouse</a></p>
<h2 id="Data-update-events"><a href="#Data-update-events" class="headerlink" title="Data update events"></a>Data update events</h2><ul>
<li><code>change</code> event: on finish change, e.g. text-input elem blur, select-opt changes <a href="https://javascript.info/events-change-input#event-change">..</a></li>
<li><code>input</code> event: on any value change <a href="https://javascript.info/events-change-input#event-input">..</a></li>
<li><code>cut/copy/paste</code> event <a href="https://javascript.info/events-change-input#events-cut-copy-paste">…</a></li>
</ul>
<h2 id="Form-submit-event"><a href="#Form-submit-event" class="headerlink" title="Form submit event"></a>Form submit event</h2><p><code>submit</code> event on form (sent data to server): </p>
<ul>
<li>trigger on press “Enter” on input field =&gt; trigger <strong>click</strong> on input[type=submit] <a href="https://javascript.info/forms-submit#event-submit">..</a></li>
<li>submit form manually: <code>form.submit()</code>:  (<code>submit</code> event not generated)</li>
<li>tasks: <a href="https://javascript.info/forms-submit#modal-form">Modal form</a></li>
</ul>
<h1 id="Doc-amp-resrc-loading"><a href="#Doc-amp-resrc-loading" class="headerlink" title="Doc &amp; resrc loading"></a>Doc &amp; resrc loading</h1><h2 id="Page-load-events"><a href="#Page-load-events" class="headerlink" title="Page load events"></a>Page load events</h2><ul>
<li><code>document.DOMContentLoaded</code>: HTML &amp; DOM tree ready, form autofill <a href="https://javascript.info/onload-ondomcontentloaded#built-in-browser-autofill">..</a><ul>
<li>see <code>&lt;img&gt;</code> node but size = 0</li>
<li><strong>wait non-async script</strong> exe <a href="https://javascript.info/onload-ondomcontentloaded#domcontentloaded-and-scripts">..</a>, but <strong>not wait external-CSS</strong> (unless script require it) <a href="https://javascript.info/onload-ondomcontentloaded#domcontentloaded-and-styles">..</a></li>
<li>handle by <code>addEventListener()</code> <a href="https://javascript.info/onload-ondomcontentloaded#domcontentloaded">..</a></li>
</ul>
</li>
<li><code>window.load</code>: external resrc (css, img) loaded (img size known) <a href="https://javascript.info/onload-ondomcontentloaded#window-onload">..</a></li>
<li><code>window.beforeunload/unload</code>: user leaving this page: nav to other pages/close win <a href="https://javascript.info/onload-ondomcontentloaded#window.onbeforeunload">..</a><ul>
<li><code>window.onbeforeunload</code> return false / non-empty str: cancel the event (prevent default?) &amp; show the str as msg e.g. “change not save, sure to leave?” — answer negative block page-nav? <a href="https://javascript.info/clickjacking#blocking-top-navigation">..</a></li>
</ul>
</li>
</ul>
<p>Others</p>
<ul>
<li><code>document.readState</code>: “loading”, “interactive” , “complete” — the old <strong>document.readystatechange</strong> <a href="https://javascript.info/onload-ondomcontentloaded#readystate">..</a></li>
<li>Whole process <a href="https://javascript.info/onload-ondomcontentloaded#readystate">…</a></li>
</ul>
<h2 id="Script-attr-async-defer"><a href="#Script-attr-async-defer" class="headerlink" title="Script attr: async, defer"></a>Script attr: async, defer</h2><p>Both only for external script (ignored if no <code>src</code> attr) <a href="https://javascript.info/script-async-defer#defer">..</a> &amp; <a href="https://javascript.info/modules-intro#async-works-on-inline-scripts">..</a> and load not-block (load script in bg)</p>
<ul>
<li><code>async</code>: run in load-1st order <a href="https://javascript.info/script-async-defer#async">..</a><ul>
<li>Dynamic scripts (gen by JS) load af insert to the doc <a href="https://javascript.info/script-async-defer#dynamic-scripts">..</a>    </li>
</ul>
</li>
<li><code>defer</code>: run (in doc order) when DOM ready (but bf DOMContentLoaded event)  <a href="https://javascript.info/script-async-defer#defer">..</a></li>
</ul>
<h2 id="Resrc-loading-event"><a href="#Resrc-loading-event" class="headerlink" title="Resrc loading event"></a>Resrc loading event</h2><p>Most resrcs start loading when added to the doc, except <code>&lt;img&gt;</code> (load when gets src &amp; cached <a href="https://javascript.info/onload-onerror#load-images-with-a-callback">..</a>)</p>
<ul>
<li><code>load/error</code> events: external resrc (tag with <code>src</code> attr <a href="https://javascript.info/onload-onerror#other-resources">..</a>, e.g. script, img, css) loaded successfully / err  <a href="https://javascript.info/onload-onerror">..</a></li>
<li>iframe.onload: on loading finished ( successful || error) (history) <a href="https://javascript.info/onload-onerror#other-resources">..</a></li>
<li>track other errors: <code>window.onerror</code> <a href="https://javascript.info/onload-onerror#script-onerror">..</a></li>
<li>CORS &amp; script <code>crossorigin</code> attr <a href="https://javascript.info/onload-onerror#crossorigin-policy">…</a></li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>Programming</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>IT</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript miscellaneous</title>
    <url>/blog/2020/05/20/js-miscellaneous/</url>
    <content><![CDATA[<h1 id="Chrome-console-amp-Debugging"><a href="#Chrome-console-amp-Debugging" class="headerlink" title="Chrome console &amp; Debugging"></a>Chrome console &amp; Debugging</h1><p>Chrome console <a href="https://javascript.info/devtools#google-chrome">..</a> &amp; debuging in chrome <a href="https://javascript.info/debugging-chrome">..</a></p>
<ul>
<li>logging with <code>console.log(...)</code></li>
<li><strong>breakpoints</strong> &amp; <code>debugger</code> cmd, execution tracking …</li>
</ul>
<h1 id="‘use-strict’"><a href="#‘use-strict’" class="headerlink" title="‘use strict’"></a>‘use strict’</h1><p>To enable ES5</p>
<ul>
<li>off by default — always put <code>&#39;use script&#39;</code> on <strong>top</strong> of script/fn-body<ul>
<li>auto enable for <code>class</code> &amp; <code>module</code></li>
<li>no way to cancel once enter strict mode</li>
</ul>
</li>
<li>non-strict: assignment to non-existing var (without declear) ==&gt; create a new global var (for compatibility) <a href="https://javascript.info/closure#step-3-inner-and-outer-lexical-environment">..</a></li>
</ul>
<a id="more"></a>

<h1 id="Data-types"><a href="#Data-types" class="headerlink" title="Data types"></a>Data types</h1><ul>
<li><code>Object</code> key: str/symbol (keyed values collection)</li>
<li><code>Array</code> key: int (ordered collection, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array">MDN</a>)</li>
<li><code>Map</code> key: any type</li>
<li><code>Set</code>: unique values</li>
</ul>
<h2 id="Date-amp-time"><a href="#Date-amp-time" class="headerlink" title="Date &amp; time"></a>Date &amp; time</h2><ul>
<li><a href="https://javascript.info/date#creation">creation</a> &amp; <code>Date.parse(str)</code> <a href="https://javascript.info/date#date-parse-from-a-string">..</a></li>
<li><a href="https://javascript.info/date#access-date-components">get/set date components</a>: <code>get/set*()</code>, <a href="https://javascript.info/date#autocorrection">auto-correction</a></li>
<li>work on timestamp<ul>
<li><code>Date.now()</code>: get timestamp without intermediate Date obj</li>
<li><code>date.getTime()</code>: faster than auto-date-to-num-convert (by +/-) <a href="https://javascript.info/date#benchmarking">..</a><ul>
<li>more precise time measure <a href="https://javascript.info/date#summary">..</a></li>
</ul>
</li>
</ul>
</li>
<li>tasks: <a href="https://javascript.info/date#show-a-weekday">Show a weekday</a> &amp; <a href="https://javascript.info/date#european-weekday">European weekday</a>, <a href="https://javascript.info/date#which-day-of-month-was-many-days-ago">getDateAgo(date, days)</a>, <a href="https://javascript.info/date#last-day-of-month">getLastDayOfMonth(year, month)</a></li>
</ul>
<h2 id="Map-amp-Set-WeakMap-amp-WeakSet"><a href="#Map-amp-Set-WeakMap-amp-WeakSet" class="headerlink" title="Map &amp; Set, WeakMap &amp; WeakSet"></a>Map &amp; Set, WeakMap &amp; WeakSet</h2><p><code>Map</code>: obj with key of any type, key compare: <code>===</code> &amp; <code>NaN === NaN</code></p>
<ul>
<li><code>new Map([ [_,_], [_,_] ..])</code> &amp; obj &lt;=&gt; map: <code>new Map(Object.entries(obj))</code> <a href="https://javascript.info/map-set#object-entries-map-from-object">..</a> &amp; <code>Object.fromEntries(map)</code> <a href="https://javascript.info/map-set#object-fromentries-object-from-map">..</a></li>
<li>iter: <code>forEach(..)</code>, <code>keys/values/entries()</code> <a href="https://javascript.info/map-set#iteration-over-map">..</a></li>
</ul>
<p><code>Set</code>: unique values</p>
<ul>
<li>methods similar to map, get/set() =&gt; add(), iter by insertion order <a href="https://javascript.info/map-set#summary">..</a></li>
<li>Filter unique array members: <code>Array.from(new Set(arr))</code><a href="https://javascript.info/map-set#filter-unique-array-members">..</a></li>
</ul>
<p><code>WeakMap</code>/<code>WeakSet</code>: obj unreachable by other means -&gt; rmed from memory &amp; WM/WS</p>
<ul>
<li>only <strong>obj</strong> as key/items in WM/WS</li>
<li>methods <a href="https://javascript.info/weakmap-weakset#weakmap">..</a> </li>
<li>WeakMap use cases: <a href="https://javascript.info/weakmap-weakset#use-case-additional-data">additional data</a>, <a href="https://javascript.info/weakmap-weakset#use-case-caching">caching</a></li>
</ul>
<h1 id="Obj-advanced"><a href="#Obj-advanced" class="headerlink" title="Obj advanced"></a>Obj advanced</h1><h2 id="Symbol-type"><a href="#Symbol-type" class="headerlink" title="Symbol type"></a>Symbol type</h2><p>unique (even same desc) vs global symbol (1 key 1 symbol)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">alert(<span class="built_in">Symbol</span>(<span class="string">&quot;id&quot;</span>));    <span class="comment">// TypeError (not auto-convert to string)</span></span><br><span class="line">alert(id.toString()); 	<span class="comment">// Symbol(id)</span></span><br><span class="line">alert(id.description);  <span class="comment">// id</span></span><br></pre></td></tr></table></figure>

<h2 id="Obj-prop-config-descriptor-amp-Accessor"><a href="#Obj-prop-config-descriptor-amp-Accessor" class="headerlink" title="Obj prop config: descriptor &amp; Accessor"></a>Obj prop config: descriptor &amp; Accessor</h2><p>prop descriptor: <code>value</code> + <code>writable</code>, <code>enumerable</code>, <code>configurable</code> <a href="https://javascript.info/property-descriptors">..</a></p>
<ul>
<li>get/set desc: <code>Object.getOwnPropertyDescriptor()</code>, <code>Object.defineProperty()</code> &amp; clone with desc <a href="https://javascript.info/property-descriptors#object-getownpropertydescriptors">..</a></li>
<li>obj created “the usually way”: flags default <code>true</code>; flags not supplied in desc defalut <code>false</code></li>
<li>built-in <code>toString()</code> non-enumerable</li>
<li>Sealing an object globally …</li>
</ul>
<p>Accessor <code>get/set xxx([value]) &#123;..&#125;</code>, trigger when <code>xxx</code> prop read/assign</p>
<ul>
<li>desc: <code>get/set([value]) &#123;..&#125;</code>, <code>enumerable</code>, <code>configurable</code></li>
<li>smarter g/setter: store value in another internal prop</li>
<li>age -&gt; birthday example <a href="https://javascript.info/property-accessors#using-for-compatibility">..</a></li>
</ul>
<h2 id="Key-iter"><a href="#Key-iter" class="headerlink" title="Key iter"></a>Key iter</h2><ul>
<li>method differs (all return an arr) <a href="https://javascript.info/prototype-methods#summary">..</a>, <a href="https://javascript.info/proxy#iteration-with-ownkeys-and-getownpropertydescriptor">..</a><ul>
<li><code>Reflect.ownKeys(obj)</code>/<code>obj.hasOwnProperty(key)</code>: own</li>
<li><code>Object.getOwnPropertyNames</code>: own, non-symbol — <code>Object.getOwnPropertySymbols(obj)</code>: own, symbol</li>
<li><code>Object.keys/values/entries(obj)</code>: own, <strong>non-symbol</strong> &amp; <code>enum</code></li>
<li><code>for..in</code>: own + <strong>proto</strong>, <strong>non-symbol</strong> &amp; <code>enum</code></li>
<li><code>Object.assign()</code>: symbol + non-symbol <a href="https://javascript.info/symbol#symbols-are-skipped-by-for-in">..</a></li>
</ul>
</li>
</ul>
<h2 id="Global-obj"><a href="#Global-obj" class="headerlink" title="Global obj"></a>Global obj</h2><p>Provide built-in var &amp; fn (can be access directly), e.g. <code>window</code> in browser &amp; <code>global</code> in node </p>
<ul>
<li>e.g. <code>window.alert</code>, <code>window.innerHeight</code> &amp; global fn || <strong>var</strong>-var</li>
<li>make value global: <code>window.xxx = ...</code> (props of global-obj)</li>
</ul>
<h2 id="Primitive-as-Obj"><a href="#Primitive-as-Obj" class="headerlink" title="Primitive as Obj"></a>Primitive as Obj</h2><p>provide methods to op prim but keep them fast &amp; lightweight e.g.  <code>String</code>, <code>Number</code>, <code>Boolean</code>, <code>Symbol</code> </p>
<ul>
<li>temporary wrapper obj created &amp; destroyed <a href="https://javascript.info/primitives-methods#a-primitive-as-an-object">..</a> — manually modify obj wrap =&gt; err (strict) || undefined <a href="https://javascript.info/primitives-methods#can-i-add-a-string-property">..</a></li>
</ul>
<h2 id="Obj-to-primitive"><a href="#Obj-to-primitive" class="headerlink" title="Obj to primitive"></a>Obj to primitive</h2><ul>
<li><a href="" title="which type to convert">3 hints</a>: <code>&quot;string&quot;</code>, <code>&quot;number&quot;</code> &amp; <code>&quot;default&quot;</code> (no boolean hint: all <strong>obj  =&gt; true</strong>)</li>
<li>3 methods: must return a prim value <a href="https://javascript.info/object-toprimitive#return-types">..</a><ul>
<li><code>[Symbol.toPrimitive](hint)</code> return obj ==&gt; err</li>
<li>built-in <code>toString()</code> =&gt; “[object Object]”, <code>valueOf()</code> =&gt; obj itself (ignored) <a href="https://javascript.info/object-toprimitive#tostring-valueof">..</a></li>
</ul>
</li>
</ul>
<h1 id="JS-engine-internal-Event-loop"><a href="#JS-engine-internal-Event-loop" class="headerlink" title="JS engine internal: Event loop"></a>JS engine internal: Event loop</h1><p><a href="https://javascript.info/event-loop#event-loop">Macrotask queue</a>: handle tasks e.g. <strong>current regular sync script</strong>, <strong>external script</strong> load &amp; exe, <strong>UI/network event handler</strong> (e.g. <code>mousemove</code>), setTimeout <strong>callback</strong></p>
<ul>
<li>tasks come while engine busy — enqueued to the queue</li>
<li>re-render only af task complete — if current task tasks long time:  <strong>Page Unresponsive</strong> alert</li>
<li>enqueue a macrotask:  <code>setTimeout(f)</code></li>
<li>use case: <a href="https://javascript.info/event-loop#use-case-1-splitting-cpu-hungry-tasks">split CUP-heavy task by setTimeout</a> =&gt; react other tasks in-btn / <a href="https://javascript.info/event-loop#use-case-2-progress-indication">progress indication</a> <a href="https://javascript.info/event-loop#summary">…</a></li>
</ul>
<p><a href="https://javascript.info/microtask-queue">Microtask queue</a> (aka <code>PromiseJobs</code> queue): handle async promise handlers in <code>.then/catch/finally</code> &amp; <code>await</code></p>
<ul>
<li>handler enqueued when promise settled, run af current code &amp; prev micro finished <a href="https://javascript.info/microtask-queue#microtasks-queue">..</a></li>
<li>global <code>unhandledrejection</code> event: triggered when microtask queue completed but exist “rejected” promise</li>
<li>make code exe af <code>.then/catch/finally</code>: chained by <code>.then()</code></li>
<li>enqueue a microtask — <code>queueMicrotask(f)</code> <a href="https://javascript.info/event-loop#macrotasks-and-microtasks">..</a></li>
</ul>
<p>JS exe-flow based on <em>event loop</em>: engine sleep until tasks appear, then exe from the oldest one (FIFO) <a href="https://javascript.info/event-loop">..</a></p>
<ul>
<li>exe process (no macrotask in-btw microtask — ensure app-env same) <a href="https://javascript.info/event-loop#summary">..</a><ol>
<li><strong>current regular sync script</strong> (=&gt; <strong>all microtasks</strong> =&gt;  <strong>render</strong>) </li>
<li><strong>some macrotask</strong> (=&gt; <strong>all microtasks</strong> =&gt;  <strong>render</strong>)</li>
<li><strong>another macrotask</strong> </li>
<li>…</li>
</ol>
</li>
<li><a href="https://javascript.info/event-loop#summary">cpu-heavy event &amp; web worker: another thread</a></li>
</ul>
<h1 id="Web-Components"><a href="#Web-Components" class="headerlink" title="Web Components"></a>Web Components</h1><p><strong>Web components</strong>: custom html elem, Shadow DOM, CSS Scoping <a href="https://javascript.info/webcomponents-intro#component-architecture">…</a></p>
<h2 id="Custom-HTML-elem"><a href="#Custom-HTML-elem" class="headerlink" title="Custom HTML elem"></a>Custom HTML elem</h2><ul>
<li><strong>all-new</strong>: extends <code>HTMLElement</code> <a href="https://javascript.info/custom-elements">..</a> (no semantics <a href="https://javascript.info/custom-elements#customized-built-in-elements">..</a>)<ul>
<li>2-step creation: JS class + <code>customElements.define(tag, js-class)</code> <a href="https://javascript.info/custom-elements">…</a></li>
<li><code>&lt;time-formatted&gt;</code> &amp; <code> Intl.DateTimeFormat(..)</code> demo …</li>
</ul>
</li>
<li><strong>customized</strong>: extends built-in elem (with semantics) — 3-step creation (<code>&lt;button is=&quot;my-button&quot;&gt;</code>) <a href="https://javascript.info/custom-elements#customized-built-in-elements">…</a></li>
<li>html tag <code>&lt;my-element&gt;</code> / <code>document.createElement(..)</code>: create instance of <code>MyElement</code> <a href="https://javascript.info/custom-elements">..</a></li>
<li>CSS selector <code>:not(:defined)</code>: style “undefined” elems, e.g. custom html-tag bf <code>customElements.define(..)</code> <a href="https://javascript.info/custom-elements#example-time-formatted">..</a></li>
<li>HTML parser process parent bf child <a href="https://javascript.info/custom-elements#rendering-order">…</a><ul>
<li>access childElem by <code>setTimeout(..)</code> (af html parsing completed)</li>
<li>want outer callback trigger af inner elem ready: inner elem dispatch events &amp; outer listen</li>
</ul>
</li>
<li>task: <a href="https://javascript.info/custom-elements#live-timer-element">Live timer elem</a></li>
</ul>
<h2 id="Shadow-DOM"><a href="#Shadow-DOM" class="headerlink" title="Shadow DOM"></a>Shadow DOM</h2><ul>
<li>Shadow tree (for encapsulation: own id/quary spaces, styling <a href="https://javascript.info/shadow-dom#encapsulation">..</a>, <a href="https://javascript.info/shadow-dom#summary">..</a>) vs Light tree <a href="https://javascript.info/shadow-dom#shadow-tree">…</a><ul>
<li>create by <code>elem.attachShadow(..)</code> =&gt; shadow root: <code>elem.shadowRoot</code> <ul>
<li><code>elem.shadowRoot.host</code>: the elem, shadow tree host <a href="https://javascript.info/shadow-dom#shadow-tree">…</a></li>
<li>shadow root like elem (<code>innerHTML</code> | DOM methods appliable), but cannot have event handler (use its 1st child) <a href="https://javascript.info/slots-composition#updating-slots">..</a>    </li>
</ul>
</li>
<li>if elem has both -&gt; only render shadow — compose by <strong>slot</strong> <a href="https://javascript.info/slots-composition">…</a><ul>
<li><code>&lt;slot name=&quot;...&quot;&gt;</code> (shadow) &amp; elem with <code>slot=&quot;...&quot;</code> (light, render as child elem of <code>&lt;slot&gt;</code>)</li>
<li><code>slotchange</code> event (when slotted-elems add/rm/replace) <a href="https://javascript.info/slots-composition#updating-slots">…</a>, <a href="https://javascript.info/slots-composition#summary">..</a> &amp; slot-related methods <a href="https://javascript.info/slots-composition#slot-api">…</a></li>
<li>open/close menu example <a href="https://javascript.info/slots-composition#menu-example">…</a></li>
</ul>
</li>
</ul>
</li>
<li><strong>styling</strong>: <code>:host*</code>, <code>::slotted</code>, components custom CSS props <a href="https://javascript.info/shadow-dom-style">…</a> &amp; <code>pseudo</code> attr <a href="https://javascript.info/shadow-dom#built-in-shadow-dom">..</a></li>
<li><strong>event handling</strong>: event happen in shadow DOM hidden to outside — retarget (bubble) to its <strong>host</strong> elem <a href="https://javascript.info/shadow-dom-events">..</a><ul>
<li><code>e.composedPath()</code>, <code>e.composed</code> (true for e bubble across shadow DOM boundary) …</li>
</ul>
</li>
</ul>
<h1 id="Template-elem"><a href="#Template-elem" class="headerlink" title="Template elem"></a>Template elem</h1><p><code>&lt;template&gt;</code> tag: for HTML markup storage (any syntax-valid HTML), content ignored by browser <a href="https://javascript.info/template-element">..</a></p>
<ul>
<li>elems not render, style/script not work, until <code>tmpl.content</code>: <code>DocumentFragment</code> <a href="https://javascript.info/template-element#inserting-template">..</a> inserted to doc</li>
</ul>
<h1 id="Generator"><a href="#Generator" class="headerlink" title="Generator"></a>Generator</h1><p>Regualr fn retur 1 value ==&gt; Generators “yield” mtp values 1-by-1 (allow create data stream)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">generateSequence</span>(<span class="params"></span>) </span>&#123;    <span class="comment">// generator function</span></span><br><span class="line">  <span class="keyword">yield</span> <span class="number">1</span>;                        <span class="comment">// no value af &#x27;yield&#x27; means &#x27;undefined&#x27;</span></span><br><span class="line">  <span class="keyword">yield</span> <span class="number">2</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> generator = generateSequence(); <span class="comment">// when called, return a Generator instead of run the fn </span></span><br><span class="line">alert(generator);                   <span class="comment">// [object Generator]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// call generator.next() to get result</span></span><br><span class="line">&#123;<span class="attr">value</span>: <span class="number">1</span>, <span class="attr">done</span>: <span class="literal">false</span>&#125;  </span><br><span class="line">&#123;<span class="attr">value</span>: <span class="number">2</span>, <span class="attr">done</span>: <span class="literal">false</span>&#125; </span><br><span class="line">&#123;<span class="attr">value</span>: <span class="number">3</span>, <span class="attr">done</span>: <span class="literal">true</span>&#125;              <span class="comment">// done:true for &quot;return&quot;</span></span><br><span class="line">&#123;<span class="attr">done</span>: <span class="literal">true</span>&#125;                        <span class="comment">// no more value af &#x27;return&#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>when called, it return a <strong>Generator</strong> (an Iterator with <strong>next()</strong> method) to manage the fn-exe</li>
<li><code>gen.next()</code> — run fn-exe until <code>yield &lt;value&gt;</code> stmt &amp; return <code>&#123;value: &lt;value&gt;, done: true/false&#125;</code><ul>
<li><a href="https://javascript.info/generators#using-generators-for-iterables">use generator to create iter-obj</a></li>
<li>can use <code>gen</code> in <code>for..of</code> loop &amp; sperad syntax to get yield values (exc returned value)</li>
</ul>
</li>
<li>pass data back to gen.yield<ul>
<li><code>gen.next(arg)</code> — pass <code>arg</code> as the value of <strong>current yield</strong> &amp; return the resulting-obj of <strong>next yield</strong> <a href="https://javascript.info/generators#yield-is-a-two-way-street">..</a></li>
<li><code>gen.throw(err)</code> — throw err as the result of <strong>current yield</strong> (err not catched in gen() will fall out to <code>gen.throw</code>)</li>
</ul>
</li>
<li><strong>Generator composition</strong> — embed gen-values into another gen-fn by <code>yield* gen(...)</code> </li>
<li>Task:  <a href="https://javascript.info/generators#pseudo-random-generator">pseudoRandom(seed)</a></li>
</ul>
<p><a href="https://javascript.info/async-iterators-generators#async-iterables">Async iteratable</a> <code>async *[Symbol.asyncIterator]()</code></p>
<ul>
<li><code>async function*</code> for <a href="https://javascript.info/async-iterators-generators#async-generators">async gen</a> — yield value asyncly &amp; <code>await gen.next()</code></li>
<li><code>[Symbol.asyncIterator]()</code> for <a href="https://javascript.info/async-iterators-generators#async-iterators">async iterator</a> — iter over data that comes asyncly (e.g. paginated data) &amp; use in <code>for await ..of</code> loop</li>
<li><a href="https://javascript.info/async-iterators-generators#real-life-example">the <code>async function* fetchCommits(repo)</code> example</a></li>
</ul>
<h1 id="Programming-pattern"><a href="#Programming-pattern" class="headerlink" title="Programming pattern"></a>Programming pattern</h1><p><strong>Fn decorator</strong> <a href="https://javascript.info/call-apply-decorators">..</a></p>
<ul>
<li>fn-wrapper that takes fn as param (callback) and alters its behavior</li>
<li>decorated fn lose prop — <code>Proxy</code> ( forward eth to target) <a href="https://javascript.info/proxy#proxy-apply">..</a></li>
<li>tasks: <a href="https://javascript.info/call-apply-decorators#spy-decorator">spy(fn)</a>, <a href="https://javascript.info/call-apply-decorators#delaying-decorator">delay(fn)</a>, <a href="https://javascript.info/call-apply-decorators#debounce-decorator">debounce(fn, ms)</a>, <a href="https://javascript.info/call-apply-decorators#throttle-decorator">throttle(fn, ms)</a></li>
</ul>
<p><strong>Currying</strong></p>
<ul>
<li>transform <strong>f(a, b, c)</strong> –&gt; <strong>f(a)(b)(c)</strong> — easily for partial (see below): let fn = f(a), then fn(b)(c) <a href="https://javascript.info/currying-partials#currying-what-for">..</a></li>
<li>implementation <a href="https://javascript.info/currying-partials#advanced-curry-implementation">..</a></li>
</ul>
<p><strong>Proxy &amp; Reflect</strong><br><code>Proxy</code>: a wrapper obj that intercepts ops (e.g. get/set props) on the target-obj by its handler (obj with traps) <a href="https://javascript.info/proxy">..</a></p>
<ul>
<li>ops on <code>proxy</code> =&gt; trigger corresponding trap =&gt; (if no) forwards ops to <code>target</code> <a href="https://javascript.info/proxy#proxy">..</a> </li>
<li>proxy no own props, access from <code>target</code> <a href="https://javascript.info/proxy#proxy">..</a></li>
<li>ops -&gt; proxy handler methods -&gt; internal methods (low level)</li>
<li>Proxying a getter with <code>receiver</code> by <code>Reflect.get(target, prop, receiver);</code>: pass <code>receiver</code> (correct obj) as <code>this</code> in getter <a href="https://javascript.info/proxy#proxying-a-getter">…</a></li>
</ul>
<p><code>Reflect</code>: to complement Proxy <a href="https://javascript.info/proxy#reflect">…</a></p>
<p>Tasks: <a href="https://javascript.info/proxy#accessing-array-1">array[-1]</a>, <a href="https://javascript.info/proxy#observable">makeObservable(target)</a></p>
<p><strong>Recursion</strong> <a href="https://javascript.info/recursion">..</a></p>
<ul>
<li><strong>base</strong> (get result without nest calls) &amp; <strong>recursive step</strong><ul>
<li><a href="" title="store info about the exe of currently running fn">execution context and stack</a>, <a href="https://javascript.info/recursion#two-ways-of-thinking" title="max # of nested fn calls, inc 1st one (i.e. max # of context in the stack), limited by JS engine">recursion depth</a>, <a href="https://javascript.info/recursion#sum-all-numbers-till-the-given-one" title="recur-call in last line (most JS engine not support)">tail call optimization</a></li>
</ul>
</li>
<li><strong>recursive vs iterative</strong> <a href="https://javascript.info/recursion#the-exit">..</a><ul>
<li>recursive: <a href="" title="nested calls and execution stack management [taks1]">take resrcs</a> but <a href="" title="`shorter` &amp; more understndable">simpler code</a></li>
<li>iterative: <a href="https://javascript.info/recursion#the-exit" title="single context, changing var in the process, small fixed memory usage">memory-saving</a></li>
</ul>
</li>
<li>recursive structure &amp; linked list: <code>node = &#123;value, next -&gt; node2 / null&#125;</code> </li>
<li>task: <a href="https://javascript.info/recursion#fibonacci-numbers">Fib numbers</a>, <a href="https://javascript.info/recursion#sum-all-numbers-till-the-given-one">Sum 1..n</a>, <a href="https://javascript.info/recursion#output-a-single-linked-list">Print list</a>, <a href="https://javascript.info/recursion#output-a-single-linked-list-in-the-reverse-order">Print list revresely</a> </li>
</ul>
<h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><ul>
<li>range &amp; selection <a href="https://javascript.info/selection-range">..</a></li>
<li>mutation observer: fire callback when change observed on a DOM node, childList &amp; subtree, attributes, text content <a href="https://javascript.info/mutation-observer">..</a><ul>
<li>div <code>contentEditable</code> attr</li>
</ul>
</li>
</ul>
<h1 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h1><ul>
<li>a script file that load each other by <code>export</code> &amp; <code>import</code> <a href="https://javascript.info/modules-intro#what-is-a-module">..</a>, intro in ES6 <a href="https://javascript.info/modules-intro">..</a></li>
</ul>
<p><strong>module in browser</strong></p>
<ul>
<li>in-line module: <code>&lt;script type=&quot;module&quot;&gt;</code> <a href="https://javascript.info/modules-intro#what-is-a-module">..</a> (<code>type</code> attr enable <code>import/export</code> <a href="https://javascript.info/modules-intro#build-tools">..</a> &amp; <a href="https://javascript.info/modules-intro#summary">..</a>) — old browser use “nomodule” attr instead <a href="https://javascript.info/modules-intro#compatibility-nomodule">..</a></li>
<li>module <code>defer</code> <a href="https://javascript.info/modules-intro#module-scripts-are-deferred">..</a> by default <a href="https://javascript.info/modules-intro#summary">..</a>, can <code>async</code> <a href="https://javascript.info/modules-intro#async-works-on-inline-scripts">..</a> (work for both inline/external scripts <a href="https://javascript.info/modules-intro#module-scripts-are-deferred">..</a> &amp; <a href="https://javascript.info/modules-intro#async-works-on-inline-scripts">..</a> — regular script only external <a href="https://javascript.info/modules-intro#async-works-on-inline-scripts">..</a>) </li>
</ul>
<p><code>export/import</code> <strong>syntax</strong> <a href="https://javascript.info/import-export#summary">..</a></p>
<ul>
<li>default export (import without <code>&#123;&#125;</code>) vs named export <a href="https://javascript.info/import-export#export-default">..</a></li>
<li><code>default</code> keyword ref to the default export <a href="https://javascript.info/import-export#the-default-name">..</a> (when import, any name works — name it correspond to file name for consistency <a href="https://javascript.info/import-export#a-word-against-default-exports">..</a>)</li>
<li><code>as</code> for export/import renaming</li>
<li>Re-export: <code>export .. from ..</code> (import things &amp; immediately export them): gather scattered pkg fnality into single entry point &amp; expose them (by mtp re-export stmt in 1 file) <a href="https://javascript.info/import-export#re-export">..</a></li>
<li><code>import &quot;module&quot;</code>: run module code without assign to var </li>
</ul>
<p><strong>dynamic imports</strong> <code>import(&lt;module-path&gt;)</code>: return a <strong>promise</strong> resolves into a module-obj with exports as keys <a href="https://javascript.info/modules-dynamic-imports">..</a></p>
<ul>
<li>a special syntax, not a fn (like super(), cannot copy &amp; use <strong>call/apply</strong>)</li>
<li>work with regular <code>&lt;script&gt;</code> tag (no need type=”module”)</li>
</ul>
<p><strong>module vs regular script</strong> <a href="https://javascript.info/modules-intro#core-module-features">..</a></p>
<ul>
<li>auto strict (<code>this == undefined</code>)</li>
<li>own scope (interchange fnality via <code>import/export</code> <a href="https://javascript.info/modules-intro#summary">..</a>)</li>
<li>exe only once &amp; export share when imported mtp times (use as init) </li>
</ul>
<p><strong>others</strong></p>
<ul>
<li>place of <code>import/export</code> stms not matter (script top or bottom), but not work inside “{…}” — dynamic imports <a href="https://javascript.info/import-export#summary">..</a></li>
<li><code>import.meta</code>: obj contains info about the current module <a href="https://javascript.info/modules-intro#import-meta">..</a></li>
<li>build tool (for deployment) e.g. <strong>webpack</strong> (bundle modules toghther &amp; tree-shaking) <a href="https://javascript.info/modules-intro#build-tools">..</a><ul>
<li>resulting “bundled” script <code>bundle.js</code> no <code>import/export</code> stmt ==&gt; no <code>type=module</code> required (regular script <code>src=&quot;bundle.js&quot;</code>) <a href="https://javascript.info/modules-intro#build-tools">..</a></li>
</ul>
</li>
</ul>
<h1 id="Other-concepts-amp-Resources"><a href="#Other-concepts-amp-Resources" class="headerlink" title="Other concepts &amp; Resources"></a>Other concepts &amp; Resources</h1><ul>
<li><a href="https://javascript.info/coding-style">code style &amp; linter</a></li>
<li><a href="https://javascript.info/testing-mocha">Auto-testing lib &amp; BDD</a></li>
<li><a href="https://javascript.info/manuals-specifications">Manuals &amp; specs</a></li>
<li><a href="https://javascript.info/polyfills">Polyfill &amp; Babel</a> <ul>
<li>JS keep evolving &amp; some features may not implemented in all engines</li>
<li><a href="https://babeljs.io/">Babel</a>: transpiler (new syntax constructs) +  polyfill (updates/adds new fns)</li>
<li><a href="https://javascript.info/intro#languages-over-javascript">Langs “over” JS</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>IT</category>
        <category>Programming</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>IT</tag>
      </tags>
  </entry>
</search>
